[{"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\index.js":"1","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\App.js":"2","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\reportWebVitals.js":"3","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\Result.js":"4","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\InvitedHome.js":"5","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\CreateProject.js":"6","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePage.js":"7","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\Vote.js":"8","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\Guest.js":"9","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\CopyLink.js":"10","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\CalendarComponent.js":"11","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\GoogleButton.js":"12","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\BoxDescription.js":"13","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\BtnCalendar.js":"14"},{"size":732,"mtime":1612593829865,"results":"15","hashOfConfig":"16"},{"size":1610,"mtime":1613284998145,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1612593829867,"results":"18","hashOfConfig":"16"},{"size":1724,"mtime":1613717521720,"results":"19","hashOfConfig":"16"},{"size":1210,"mtime":1613284998164,"results":"20","hashOfConfig":"16"},{"size":3055,"mtime":1613284998160,"results":"21","hashOfConfig":"16"},{"size":567,"mtime":1613370008940,"results":"22","hashOfConfig":"16"},{"size":573,"mtime":1613284998168,"results":"23","hashOfConfig":"16"},{"size":905,"mtime":1613284998161,"results":"24","hashOfConfig":"16"},{"size":413,"mtime":1613284998158,"results":"25","hashOfConfig":"16"},{"size":1923,"mtime":1613284998157,"results":"26","hashOfConfig":"16"},{"size":1108,"mtime":1613203162818,"results":"27","hashOfConfig":"16"},{"size":417,"mtime":1613370046379,"results":"28","hashOfConfig":"16"},{"size":527,"mtime":1612593829862,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"15sftdt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\index.js",["65","66","67"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nfunction formatName(user){\r\n  return user.firstName+ \" \" +user.lastName;\r\n}\r\n\r\nconst user = {\r\n  firstName: 'Jihyo',\r\n  lastName: \"Kim\"\r\n};\r\n\r\nconst element = (\r\n  <h1 className=\"greeting\">Hello, world!</h1>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\App.js",["68"],"import './App.css';\r\nimport {BrowserRouter, Route, Link} from 'react-router-dom'\r\nimport InvitedHome from './screen/InvitedHome'\r\nimport Result from './screen/Result'\r\nimport yonal_logo from './image/yonal_logo.png'\r\nimport HomePage from './screen/HomePage'\r\nimport CreateProject from './screen/CreateProject'\r\nimport GoogleButton from './component/GoogleButton'\r\nimport CopyLink from './screen/CopyLink'\r\nimport Guest from './screen/Guest'\r\nimport Vote from './screen/Vote'\r\nimport CalendarComponent from './screen/CalendarComponent';\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <div className='logoText'>우리 모두 일정 맞추기</div>\r\n      <BrowserRouter>\r\n        <Link to='./'>\r\n          <img className='Applogo' src={yonal_logo}/>  \r\n        </Link>\r\n        <GoogleButton></GoogleButton>\r\n        <Link to='./home'>\r\n          <button className = 'indexBtn'>홈페이지</button>\r\n        </Link>\r\n        <Link to='./totalcal'>\r\n              <button className = 'indexBtn'>투표결과</button>\r\n        </Link>\r\n        <Route path=\"/\" component={this}/>\r\n        <Route path=\"/invited\" component={InvitedHome}/>\r\n        <Route path=\"/totalcal\" component={Result}/>\r\n        <Route path=\"/home\" component={HomePage}/>\r\n        <Route path=\"/create\" component={CreateProject}/>\r\n        <Route path=\"/copylink\" component={CopyLink}/>\r\n        <Route path=\"/guest\" component={Guest}/>\r\n        <Route path=\"/vote\" component={Vote}/>\r\n        <Route path='/calendar' component={CalendarComponent}/>\r\n      </BrowserRouter>\r\n    </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\reportWebVitals.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\Result.js",["69"],"import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './calendar.css';\r\nimport axios from 'axios';\r\n\r\n/*  참여한 모든 유저의 date데이터를 api로 불러온다.\r\n    이렇게 불러온 데이터를 종합하여 캘린더에 출력한다. */\r\n\r\nconst Result = () => {\r\n    const [value, ] = useState(new Date());\r\n    const [test, setTest] = useState([\r\n        {\r\n            customers:\"\"\r\n        }\r\n    ]);\r\n\r\n    useEffect(() =>{\r\n        callApi()\r\n            .then(res => setTest({customers: res}))\r\n            .catch(err => console.log(err));\r\n    },[]);\r\n\r\n    async function callApi(){\r\n        const response = await fetch('/api/user');\r\n        const body = await response.json();\r\n        return body;\r\n    };\r\n    // req sample, param1이름은 데이터베이스 col(?)이거 이름과 같아야함\r\n    // const sample = async() =>{\r\n    //     const res = await axios('http://localhost:5000/v1/sample',{\r\n    //         param1:sampleparam1,\r\n    //         param2:sampleparam2\r\n    //     });\r\n    //     setTest({customers:res.data});\r\n    // };\r\n\r\n    function tileClassName(params){\r\n        if(params.view === 'month' && !(test.customers.length ===0))\r\n        if(test.customers.some(x => x.selectedday === params.date.valueOf().toString()))\r\n            return 'selected_day';\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>종합된 날짜</h1>\r\n            {test.customers ? \r\n            <Calendar className=\"calendar\"\r\n            value = {value}\r\n            minDate = {value}\r\n            tileClassName = {tileClassName} /> : \"\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\InvitedHome.js",["70","71","72"],"import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport BoxDescription from '../component/BoxDescription'\r\nimport icon_plan from '../image/yonal_icon_plan.png'\r\nimport icon_people from '../image/yonal_icon_people.png'\r\nimport icon_calendar from '../image/yonal_icon_calendar.png'\r\n\r\n\r\nconst InvitedHome = ({location}) => {\r\n    const [projectTitle, setProjectTitle] = useState('덕수빈지효');\r\n    const [memberNum, setMemberNum] = useState('3');\r\n    const [projectDate, setProjectDate] = useState('2021.01.02 - 2021.02.28');\r\n    //TODO - get data from server\r\n\r\n    return (\r\n        <div>\r\n            <div className='gray-background'>\r\n \r\n                <BoxDescription icon={icon_plan} title=\"프로젝트 이름\" content={projectTitle}/>\r\n                <BoxDescription icon={icon_people} title=\"현재 참여 인원\" content={`${memberNum} 명`}/>\r\n                <BoxDescription icon={icon_calendar} title=\"매칭 일정\" content={projectDate}/>\r\n                \r\n            </div>\r\n\r\n            <Link to='./guest'>\r\n                <button className = 'btn'>입장하기</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InvitedHome;","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\CreateProject.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePage.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\Vote.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\Guest.js",["73"],"import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Guest = () => {\r\n    const [nickname, setNickname] = useState('');\r\n    const onSubmit = () => {\r\n        alert({nickname});\r\n    }\r\n    const getObject = () => {\r\n        return `{{pathname: '/vote', nickname: ${nickname}}}`;\r\n    } \r\n    console.log(nickname);\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='nicknameGuide'>별명을 입력해주세요.</h3>\r\n                <label>\r\n                    <input className= \"inputField\" type=\"text\" value={nickname} onChange={(e) => setNickname(e.target.value)} placeholder = \"별명\" />\r\n                </label>\r\n                <Link to={{pathname: '/vote', nickname: nickname}}>\r\n                    <input type=\"submit\" value=\"확인\" className=\"btn\" onSubmit={onSubmit}/>\r\n                </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Guest;","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\CopyLink.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\CalendarComponent.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\GoogleButton.js",["74","75","76"],"import React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nconst clientId = \"88721696570-626294ccdp8h1vthmb7sce60mep2i15q.apps.googleusercontent.com\";\r\n// 클라이언트 보안 비밀번호 Z4L3SvyZM_xL7YyhLN4sufuB\r\n\r\nexport default function GoogleButton({ onSocial }){\r\n    const onSuccess = async(response) => {\r\n    \tconsole.log(response);\r\n    \r\n        const { googleId, profileObj : { email, name } } = response;\r\n        \r\n        alert(response);\r\n        // onSocial은 구글로그인이 성공하게 되면 받은 데이터를 이용해 웹사이트 서버와 연결하는 함수\r\n        // await onSocial({\r\n        //     socialId : googleId,\r\n        //     socialType : 'google',\r\n        //     email,\r\n        //     nickname : name\r\n        // });\r\n    }\r\n\r\n    const onFailure = (error) => {\r\n        console.log(error);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                responseType={\"id_token\"}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}/>\r\n        </div>\r\n    )\r\n}","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\BoxDescription.js",["77"],"import React, {} from 'react';\r\n\r\nconst BoxDescription = (props) => {\r\n    console.log(props);\r\n    return(\r\n        <div className='descriptionLine'>\r\n            <img className='descriptionIcon' src={props.icon}/>\r\n            <div className = \"descriptionTitle\">{props.title}</div>\r\n            <div className = \"descriptionContent\">{props.content}</div>\r\n    </div>   \r\n    );\r\n}\r\n\r\nexport default BoxDescription;","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\BtnCalendar.js",[],{"ruleId":"78","severity":1,"message":"79","line":7,"column":10,"nodeType":"80","messageId":"81","endLine":7,"endColumn":20},{"ruleId":"78","severity":1,"message":"82","line":11,"column":7,"nodeType":"80","messageId":"81","endLine":11,"endColumn":11},{"ruleId":"78","severity":1,"message":"83","line":16,"column":7,"nodeType":"80","messageId":"81","endLine":16,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":21,"column":11,"nodeType":"86","endLine":21,"endColumn":54},{"ruleId":"78","severity":1,"message":"87","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":13},{"ruleId":"78","severity":1,"message":"88","line":10,"column":26,"nodeType":"80","messageId":"81","endLine":10,"endColumn":41},{"ruleId":"78","severity":1,"message":"89","line":11,"column":23,"nodeType":"80","messageId":"81","endLine":11,"endColumn":35},{"ruleId":"78","severity":1,"message":"90","line":12,"column":25,"nodeType":"80","messageId":"81","endLine":12,"endColumn":39},{"ruleId":"78","severity":1,"message":"91","line":9,"column":11,"nodeType":"80","messageId":"81","endLine":9,"endColumn":20},{"ruleId":"78","severity":1,"message":"92","line":11,"column":17,"nodeType":"80","messageId":"81","endLine":11,"endColumn":25},{"ruleId":"78","severity":1,"message":"93","line":11,"column":42,"nodeType":"80","messageId":"81","endLine":11,"endColumn":47},{"ruleId":"78","severity":1,"message":"94","line":11,"column":49,"nodeType":"80","messageId":"81","endLine":11,"endColumn":53},{"ruleId":"84","severity":1,"message":"85","line":7,"column":13,"nodeType":"86","endLine":7,"endColumn":64},"no-unused-vars","'formatName' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'element' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'setProjectTitle' is assigned a value but never used.","'setMemberNum' is assigned a value but never used.","'setProjectDate' is assigned a value but never used.","'getObject' is assigned a value but never used.","'googleId' is assigned a value but never used.","'email' is assigned a value but never used.","'name' is assigned a value but never used."]