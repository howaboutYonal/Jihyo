[{"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\index.js":"1","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\App.js":"2","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\reportWebVitals.js":"3","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LoginHome.js":"4","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePage2.js":"5","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\InvitedHome.js":"6","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\VoteFinished.js":"7","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\Guest.js":"8","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\ResultForGuest.js":"9","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\CalendarComponent.js":"10","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePages\\LoginUserMain.js":"11","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePages\\ResultForManager.js":"12","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePages\\CreateProject.js":"13","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePages\\CopyLink.js":"14","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\BoxDescription.js":"15","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\GoogleButton.js":"16"},{"size":807,"mtime":1615096969610,"results":"17","hashOfConfig":"18"},{"size":1428,"mtime":1615096523866,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1614687651034,"results":"20","hashOfConfig":"18"},{"size":1606,"mtime":1615011928185,"results":"21","hashOfConfig":"18"},{"size":1501,"mtime":1615096968247,"results":"22","hashOfConfig":"18"},{"size":2760,"mtime":1615011928181,"results":"23","hashOfConfig":"18"},{"size":922,"mtime":1615011928183,"results":"24","hashOfConfig":"18"},{"size":2052,"mtime":1615044465667,"results":"25","hashOfConfig":"18"},{"size":4871,"mtime":1615046359398,"results":"26","hashOfConfig":"18"},{"size":3527,"mtime":1615046312854,"results":"27","hashOfConfig":"18"},{"size":2608,"mtime":1615097212614,"results":"28","hashOfConfig":"18"},{"size":6834,"mtime":1615097606023,"results":"29","hashOfConfig":"18"},{"size":5170,"mtime":1615097562762,"results":"30","hashOfConfig":"18"},{"size":664,"mtime":1615097581386,"results":"31","hashOfConfig":"18"},{"size":392,"mtime":1614687651020,"results":"32","hashOfConfig":"18"},{"size":1738,"mtime":1615096522908,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"15sftdt",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\index.js",[],["76","77"],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\App.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\reportWebVitals.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LoginHome.js",["78","79","80","81","82","83","84","85","86"],"import React, {useEffect, useState} from 'react';\r\nimport {BrowserRouter, Route, Link, withRouter} from 'react-router-dom'\r\nimport yonal_logo from '../image/yonal_logo.png'\r\nimport LoginUserMain from './HomePages/LoginUserMain'\r\nimport {useMediaQuery} from 'react-responsive'\r\n\r\nconst LoginHome = ({location, history}) => {\r\n  const [isLogin, setIsLogin] = useState(null);\r\n  const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || null);\r\n  const [userEmail, setUserEmail] = useState(localStorage.getItem(\"userEmail\") || null);\r\n  const [userImage, setUserImage] = useState(localStorage.getItem(\"userImage\") || null);\r\n  const isMobile = useMediaQuery ({\r\n    query : \"(max-width : 500px)\"\r\n  })\r\n  const projectStyle = isMobile? 'mNicknameGuide' : 'nicknameGuide';\r\n  const logoText = isMobile? 'logoText' : 'pcLogoText';\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  })\r\n  \r\n  const Logout = () => {\r\n    localStorage.clear();\r\n  };\r\n\r\n\r\n  return (\r\n      <div>\r\n        <div className='alignRight'>\r\n          <Link to='./loginpage'> \r\n            <button className = 'logoutBtn' onClick={Logout}>로그아웃</button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='alignCenter'>\r\n          <div className={logoText}>우리 모두 일정 맞추기</div>\r\n          <Link to={{pathname: './home', name:userName, email:userEmail, image:userImage}}>\r\n            <img className='Applogo' src={yonal_logo}/>\r\n          </Link>\r\n          <LoginUserMain name={userName} email={userEmail} image={userImage}/>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginHome);","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePage2.js",["87"],"import React, {useState} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport yonal_logo from '../image/yonal_logo.png'\r\nimport GoogleButton from '../component/GoogleButton'\r\n// import {useMediaQuery} from 'react-responsive'\r\n\r\nconst HomePage2 = ({history}) => {\r\n  const [, setIsLogin] = useState(null);\r\n  const [, setUserName] = useState(null);\r\n  const [, setUserEmail] = useState(null);\r\n  const [, setUserImage] = useState(null);\r\n\r\n  const sendData = (name, email, image, isLogin) => {\r\n    setIsLogin(isLogin);\r\n    setUserName(name);\r\n    setUserEmail(email);\r\n    setUserImage(image);\r\n  };\r\n\r\n  // const Logout = () => {\r\n  //   setIsLogin(false);\r\n  //   setUserName(null);\r\n  //   setUserEmail(null);\r\n  //   setUserImage(null);\r\n  // };\r\n\r\n  // const isMobile = useMediaQuery ({\r\n  //   query : \"(max-width : 500px)\"\r\n  // })\r\n\r\n  // const nicknameGuide = isMobile? 'mNicknameGuide' : 'nicknameGuide';\r\n\r\n  if(localStorage.getItem(\"userName\")){\r\n    history.push({\r\n      pathname: \"/loginhome\", \r\n  });\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n  <div>\r\n      <div className='logoText'>우리 모두 일정 맞추기</div>\r\n      <Link to={{pathname: '../'}}>\r\n        <img className='Applogo' src={yonal_logo}/>  \r\n      </Link>\r\n      <GoogleButton className = 'googleBtn' sendData={(e) => sendData}/>\r\n      <div className='loginGuide'>요날을 이용하시려면 로그인을 해주세요.</div>\r\n      \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(HomePage2);","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\InvitedHome.js",["88"],"import React, { useState } from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport BoxDescription from '../../component/BoxDescription'\r\nimport yonal_logo from '../../image/yonal_logo.png'\r\nimport icon_plan from '../../image/yonal_icon_plan.png'\r\nimport icon_people from '../../image/yonal_icon_people.png'\r\nimport icon_calendar from '../../image/yonal_icon_calendar.png'\r\nimport axios from 'axios';\r\n\r\n\r\nconst InvitedHome = ({location, history}) => {\r\n    const inviteLink = document.location.href;\r\n    console.log(\"링크:\", inviteLink);\r\n\r\n    const [projectId, setProjectId] = useState('');\r\n    const [projectTitle, setProjectTitle] = useState('');\r\n    const [memberNum, setMemberNum] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [projectDate, setProjectDate] = useState('');\r\n    const isMobile = useMediaQuery ({\r\n        query : \"(max-width : 500px)\"\r\n    })\r\n    const grayBackground = isMobile? 'mGrayBackground' : 'grayBackground';\r\n    const btn = isMobile? 'mBtn' : 'btn';\r\n    const logoText = isMobile? 'logoText' : 'pcLogoText';\r\n        \r\n    axios.post('http://localhost:5000/v1/get/link-data', {\r\n        inviteLink: inviteLink\r\n    }).then(function(res){\r\n        setProjectId(res.data.projectId);\r\n        setProjectTitle(res.data.projectName);\r\n        setMemberNum(res.data.number);\r\n        setStartDate(res.data.startDate);\r\n        setEndDate(res.data.endDate);\r\n        setProjectDate(res.data.startDate+' - '+res.data.endDate);\r\n    });\r\n\r\n\r\n    \r\n    return (\r\n        <div className='App'>\r\n            <div className={logoText}>우리 모두 일정 맞추기</div>\r\n            <img className='Applogo' src={yonal_logo}/>\r\n            <div className={grayBackground}>\r\n                <BoxDescription icon={icon_plan} title=\"프로젝트 이름\" content={projectTitle}/>\r\n                <BoxDescription icon={icon_people} title=\"현재 참여 인원\" content={`${memberNum} 명`}/>\r\n                <BoxDescription icon={icon_calendar} title=\"매칭 일정\" content={projectDate}/>\r\n            </div>\r\n\r\n            <div >\r\n                {/* <Link to={{pathname: '/guest', projectId: projectId, projectTitle: projectTitle}}>\r\n                    <button className = 'btn'>입장하기</button>\r\n                </Link> */}\r\n\r\n                <button className = {btn} onClick={() => { \r\n                    history.push({pathname: \"/guest\", projectId: projectId, projectTitle: projectTitle, startDate:startDate, endDate:endDate});\r\n                }}>입장하기</button>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(InvitedHome);","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\VoteFinished.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\Guest.js",["89","90"],"import React, { useState, useEffect } from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport BoxDescription from '../../component/BoxDescription'\r\nimport icon_plan from '../../image/yonal_icon_plan.png'\r\nimport axios from 'axios';\r\n\r\nasync function saveData(projectId, nickname) {\r\n    return await axios.post('http://localhost:5000/v1/link/new-user', {\r\n        project_id:projectId,\r\n        user_nickname:nickname\r\n    });\r\n\r\n}\r\n\r\nconst Guest = ({location, history}) => {\r\n    const [nickname, setNickname] = useState('');\r\n    const projectTitle = location.projectTitle;\r\n\r\n    const isMobile = useMediaQuery ({\r\n        query : \"(max-width : 500px)\"\r\n    })\r\n    const nicknameGuide = isMobile? 'mNicknameGuide' : 'nicknameGuide';\r\n    const btn = isMobile? 'mBtn' : 'btn';\r\n\r\n    const onClick = async () => {\r\n        if(nickname == ''){\r\n            alert(\"닉네임을 입력해주세요.\");\r\n        }else{\r\n            await saveData(location.projectId, nickname).then(res => \r\n                history.push({\r\n                    pathname: \"/calendar\", \r\n                    nickname:nickname, \r\n                    projectId: location.projectId, \r\n                    projectTitle:projectTitle, \r\n                    startDate:location.startDate, \r\n                    endDate:location.endDate,\r\n                    userId:res.data.userId\r\n                })\r\n            );\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <BoxDescription icon={icon_plan} title={location.projectTitle}/>\r\n\r\n            <h3 className={nicknameGuide}>별명을 입력해주세요.</h3>\r\n            <form>\r\n            <label>\r\n                <input className= \"inputField\" type=\"text\" value={nickname} onChange={(e) => setNickname(e.target.value)} placeholder = \"별명\" />\r\n            </label>\r\n            <input type=\"button\" value=\"투표하러 가기\" className={btn} onClick={onClick}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Guest);","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\ResultForGuest.js",["91","92","93"],"import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport '../calendar.css';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n/*  참여한 모든 유저의 date데이터를 api로 불러온다.\r\n    이렇게 불러온 데이터를 종합하여 캘린더에 출력한다. */\r\n\r\n// projectId는 링크를 통해 유추한다.\r\n\r\nlet useStyles = makeStyles({ foo: props => ({backgroundColor: props.backgroundColor, }),}); \r\nconst rgbHex = require('rgb-hex');\r\n\r\nconst ResultForGuest = () => {\r\n    let classes0 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0)});\r\n    let classes1 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.1)});\r\n    let classes2 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.2)});\r\n    let classes3 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.3)});\r\n    let classes4 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.4)});\r\n    let classes5 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.5)});\r\n    let classes6 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.6)});\r\n    let classes7 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.7)});\r\n    let classes8 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.8)});\r\n    let classes9 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.9)});\r\n    let classes10 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 1)});\r\n\r\n    const select = [ classes0, classes1, classes2, classes3, classes4, classes5, classes6, classes7, classes8, classes9, classes10 ]\r\n    const [weight, setWeight] = useState();\r\n\r\n    const [apiData, setApiData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [flag, setFlag] = useState(false);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] =useState('');\r\n\r\n    useEffect(async () =>{\r\n        if(flag) setFlag(false);\r\n        setIsLoading(false);\r\n        await fetchApi2().then((res) =>{\r\n            setStartDate(res.startDate);\r\n            setEndDate(res.endDate);\r\n        });\r\n        await fetchApi().then(res => setApiData(res)).then(setIsLoading(true));\r\n    },[]);\r\n    useEffect(()=>{\r\n        if(isLoading) setFlag(true);\r\n    },[isLoading]);\r\n\r\n    function parse(str) {\r\n        var y = str.substr(0,4);\r\n        var m = str.substr(4,2);\r\n        var d = str.substr(6,2); \r\n        return  new Date(y,m-1,d);\r\n    };\r\n    \r\n    function jointpars(apiData){\r\n        var voteData = JSON.parse(apiData.votedata);\r\n\r\n        var totaljoint = [];\r\n        for(var j=0; j<voteData.length;j++){\r\n            var joint = [];\r\n            for( var i= 0;i<voteData[j].length;i++){\r\n                joint = [\r\n                    ...joint,\r\n                    {\r\n                        votedata:voteData[j][i].date\r\n                    }\r\n                ]\r\n            }\r\n            totaljoint=[\r\n                ...totaljoint,\r\n                {\r\n                    votedata:joint\r\n                }\r\n            ]\r\n        }\r\n\r\n        return totaljoint;\r\n    }\r\n    \r\n    async function fetchApi(){\r\n        return axios.post('http://localhost:5000/v1/get/project-result-from-link', {shareLink:document.location.href}).then(function (res) {\r\n            setWeight((select.length/res.data.count));\r\n            return jointpars(res.data);\r\n        });\r\n    }    \r\n    async function fetchApi2(){\r\n        return axios.post('http://localhost:5000/v1/get/project-data-from-link',{shareLink:document.location.href}).then(res => res.data);\r\n    }\r\n    \r\n    function tileClassName(params){\r\n        if(!(apiData.length===0)){\r\n            var count = 0;\r\n            apiData.map(i=>{ count += comparFerUser(params,i) ? 1 : 0; });\r\n            return assignColor(count);\r\n        }\r\n    }\r\n\r\n    function assignColor(count){\r\n        count = weight*count > select.length-1 ? select.length-1 : weight*count;\r\n        try { return `${select[Math.round(count)].foo}`;\r\n        } catch (error) { console.log(weight,Math.round(count),'err'); }\r\n    }\r\n\r\n    function comparFerUser(params,idx){\r\n        if(params.view === 'month' && idx)\r\n            if(idx.votedata.some(x => parse(x.votedata.replaceAll('-','')).valueOf() === params.date.valueOf()))\r\n                return true;\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <h3 className='calendarGuide'>종합된 날짜</h3>\r\n            <div>\r\n            {isLoading&&startDate ?\r\n            <Calendar className=\"calendar\"\r\n                minDate={parse(startDate.replaceAll('-',''))}\r\n                maxDate={parse(endDate.replaceAll('-',''))}\r\n                tileClassName = {flag?tileClassName:\"\" } \r\n            />\r\n            : \"Loading\"\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ResultForGuest;","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\LinkPages\\CalendarComponent.js",["94","95","96"],"import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport BoxDescription from '../../component/BoxDescription'\r\nimport yonal_logo from '../../image/yonal_logo.png'\r\nimport icon_plan from '../../image/yonal_icon_plan.png'\r\n\r\n\r\nimport '../calendar.css';\r\nimport axios from 'axios';\r\n\r\n/*  사용자가 참여 가능한 날짜를 선택할 수 있는 달력 컴포넌트\r\n    사용자가 날짜를 선택하면 해당 날짜가 days에 date형식으로 저장된다.\r\n    이어서 버튼을 누르면, days에 저장된 데이터가 db로 업로드된다. */\r\n\r\n// nickname은 props를 통해 전달되어야 한다.\r\n// projectId는 링크를 통해 유추한다.\r\n\r\nconst CalendarComponent = ({location, history}) => {\r\n    const projectId = location.projectId;\r\n    const nickname = location.nickname;\r\n    const projectTitle = location.projectTitle;\r\n    const startDate = location.startDate;\r\n    const endDate = location.endDate;\r\n    const userId = location.userId;\r\n    const isMobile = useMediaQuery ({\r\n        query : \"(max-width : 500px)\"\r\n    })\r\n    const btn = isMobile? 'mBtn' : 'btn';\r\n    const logoText = isMobile? 'logoText' : 'pcLogoText';\r\n\r\n    const [days, setDays] = useState([]); \r\n\r\n    function check_selected_days(nextValue){\r\n        var flag = -1;\r\n        if(nextValue.valueOf() === startDate.valueOf()) return;\r\n        for(var day in days){\r\n            if(days[day].valueOf() === nextValue.valueOf()){\r\n                flag = day;\r\n                break;\r\n            }\r\n        }\r\n        if(flag===-1){\r\n            setDays(days.concat(nextValue));\r\n        }else{\r\n            var fore = days.splice(0, flag);\r\n            var back = days.splice(1, days.length);\r\n            var tmp = fore.concat(back);\r\n            setDays(tmp);\r\n        }\r\n    }\r\n    \r\n    const fetchApi = async() =>{\r\n        await axios.post('http://localhost:5000/v1/save/project-userId-date',{\r\n            projectId : projectId,\r\n            userId :userId,\r\n            date:days\r\n        });\r\n        history.push({pathname: \"/voteFinished\", nickname:nickname, projectTitle:projectTitle});\r\n    }\r\n\r\n    function tileClassName(params){\r\n        if(params.view === 'month' && !(days.length ===0))\r\n            if(days.some(x => x.valueOf() === params.date.valueOf()))\r\n                return 'selected_day'\r\n    }\r\n    function parse(str) {\r\n        var y = str.substr(0,4);\r\n        var m = str.substr(4,2);\r\n        var d = str.substr(6,2); \r\n        return  new Date(y,m-1,d);\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <BoxDescription icon={icon_plan} title={location.projectTitle}/>\r\n\r\n            <div className={logoText}>우리 모두 일정 맞추기</div>\r\n            <img className='Applogo' src={yonal_logo}/>\r\n\r\n            <h3 className='calendarGuide'>가능한 날짜를 선택해 주세요.</h3>\r\n            {parse(startDate)?            \r\n            <Calendar\r\n                className=\"calendar\"\r\n                onChange={check_selected_days} \r\n                minDate={parse(startDate.replaceAll('-',''))}\r\n                maxDate={parse(endDate.replaceAll('-',''))}\r\n                tileClassName={tileClassName}\r\n            />:'loading'\r\n            }\r\n\r\n            <button className = {btn} onClick={fetchApi}>제출하기</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarComponent;","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePages\\LoginUserMain.js",["97","98","99","100"],"import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport axios from 'axios'\r\n\r\nconst LoginUserMain = props => {\r\n    console.log(\"lo0cation\", props);\r\n\r\n    //const myName = props.name;\r\n    const myEmail = props.email;\r\n    const myImg = props.image;\r\n    const [myProjects, setMyProjects] = useState([]);\r\n    const isMobile = useMediaQuery ({\r\n        query : \"(max-width : 500px)\"\r\n      })\r\n    const projectStyle = isMobile? 'mProjectBox' : 'projectBox';\r\n    const btn = isMobile? 'mBtn' : 'btn';\r\n    const logoText = isMobile? 'logoText' : 'pcLogoText';\r\n\r\n    const projectList = myProjects.map(item => \r\n        isMobile?\r\n            <div>\r\n                <Link to={{pathname:'./totalcal', projectId:item.id, projectTitle:item.name}}>\r\n                    <button className={projectStyle}>{item.name}</button>\r\n                </Link>\r\n            </div>\r\n        :\r\n        <div className='App'>\r\n                <Link to={{pathname:'./totalcal', projectId:item.id, projectTitle:item.name}}>\r\n                    <button className={projectStyle}>{item.name}</button>\r\n                </Link>\r\n            </div>\r\n    );\r\n\r\n\r\n\r\n\r\n      \r\n    function copyData(arr) {\r\n        const temp = [];\r\n        arr.forEach(function(item){\r\n            var id = item['projectId'];\r\n            var name = item['Projects.name'];\r\n            temp.push({id, name});\r\n        })\r\n        setMyProjects(temp);\r\n    }\r\n\r\n    useEffect(async () =>{\r\n        await fetchApi().then(res => copyData(res.data.projectData));\r\n    },[])\r\n    \r\n    async function fetchApi(){\r\n        return axios.post('http://localhost:5000/v1/get/myProject', {\r\n            email: myEmail\r\n        })\r\n    }   \r\n\r\n    return (\r\n        isMobile?\r\n        <div>\r\n            <div><img className='profile' src={myImg}/></div>\r\n            <Link to={{pathname: './create', email: myEmail}}>\r\n                <button className = {btn}>새 프로젝트 만들기</button>\r\n            </Link>\r\n            \r\n            <div className={logoText}>내 프로젝트</div>\r\n            {projectList}\r\n        </div>\r\n        :\r\n        <div>\r\n            <div><img className='profile' src={myImg}/></div>\r\n            <Link to={{pathname: './create', email: myEmail}}>\r\n                <button className = {btn}>새 프로젝트 만들기</button>\r\n            </Link>\r\n            \r\n            <div className='logoText'>내 프로젝트</div>\r\n            {projectList}\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default LoginUserMain;","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePages\\ResultForManager.js",["101","102","103","104","105","106","107"],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePages\\CreateProject.js",["108","109","110","111","112"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {withRouter} from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport leadingZeros from 'leadingzero'\r\nimport yonal_logo from '../../image/yonal_logo.png'\r\n\r\n// projectUser테이블에 관계추가하는 api생성 후 추가할 예정(isManager=1)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: 'flex',\r\n      justifyContent: \"center\",\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      width: 300,\r\n    },\r\n  }));\r\n  \r\n\r\nconst CreateProject = ({location, history}) => {\r\n    \r\n    const classes = useStyles();\r\n    const [user_email,] = useState(location.email);\r\n    const [myId, setMyId] = useState(null);\r\n    const [name, setName] = useState(null);\r\n    const [startDate, setStartDate] = useState(getTimeStamp());\r\n    const [endDate, setEndDate] = useState(getTimeStamp());\r\n    const [inviteLink, ] = useState('http://localhost:3000/invite/'+getUUID());\r\n    const isMobile = useMediaQuery ({\r\n        query : \"(max-width : 500px)\"\r\n    })\r\n    const boxStyle = isMobile? 'mCreateForm' : 'createForm';\r\n    const logoText = isMobile? 'logoText' : 'pcLogoText';\r\n    const btn = isMobile? 'mBtn' : 'btn';\r\n\r\n    useEffect(async () =>{\r\n        await axios.post('http://localhost:5000/v1/get/userId', {\r\n            email: user_email\r\n        }).then(function(res){\r\n            setMyId(res.data.userId);\r\n        });\r\n    },[])\r\n\r\n    const fetchApi = async() => {\r\n        await axios.post('http://localhost:5000/v1/create/project', {\r\n            name:name,\r\n            userId:myId,\r\n            startDate:startDate,\r\n            endDate:endDate,\r\n            inviteLink:inviteLink\r\n        });\r\n    };\r\n\r\n    const onClick = () => {\r\n        if(name == null){\r\n            alert(\"프로젝트 이름을 입력해주세요.\");\r\n        }else{\r\n            fetchApi();\r\n            history.push({pathname: \"/copylink\", Link: inviteLink});\r\n        }\r\n    }\r\n\r\n    function getTimeStamp() {\r\n\r\n        var d = new Date();\r\n        var s =\r\n            leadingZeros(d.getFullYear(), 2) + '-' +\r\n            leadingZeros(d.getMonth() + 1, 2) + '-' +\r\n            leadingZeros(d.getDate(), 2);\r\n    \r\n        return s;\r\n    }\r\n    \r\n    function getUUID() { // UUID v4 generator in JavaScript (RFC4122 compliant)\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n          var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 3 | 8);\r\n          return v.toString(16);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={logoText}>우리 모두 일정 맞추기</div>\r\n            <img className='Applogo' src={yonal_logo}/>  \r\n            <h4 className='calendarTitle'>프로젝트 만들기</h4>\r\n\r\n            <div className={boxStyle}>\r\n                <TextField \r\n                    id=\"name\"\r\n                    label=\"프로젝트 이름\"\r\n                    className={classes.textField}\r\n                    error={name === \"\" ? true : false}\r\n                    helperText=\"이름을 입력해주세요\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)} \r\n                />\r\n\r\n                <br/><br/>\r\n                <div className='period'>\r\n                    시작 날짜\r\n                    <form className={`classes.container`} noValidate>\r\n                        <TextField\r\n                            id=\"startdate\"\r\n                            type=\"date\"\r\n                            error={startDate < getTimeStamp() ? true : false}\r\n                            helperText=\"현재 날짜보다 전날을 선택할 수 없습니다\"\r\n                            className={classes.textField}\r\n                            value={startDate} \r\n                            onChange={(e) => setStartDate(e.target.value)}\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                        />\r\n                    </form>\r\n                    <br/>\r\n                    종료 날짜\r\n                    <form className={classes.container} noValidate>\r\n                        <TextField\r\n                            id=\"enddate\"\r\n                            type=\"date\"\r\n                            error={startDate > endDate ? true : false}\r\n                            helperText=\"시작 날짜 이후의 날짜를 선택하세요\"\r\n                            className={classes.textField}\r\n                            value={endDate} \r\n                            onChange={(e) => setEndDate(e.target.value)}\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <button className = {btn} onClick={onClick}>확인</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(CreateProject);","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\screen\\HomePages\\CopyLink.js",[],"C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\BoxDescription.js",["113"],"import React, {} from 'react';\r\n\r\nconst BoxDescription = (props) => {\r\n    return(\r\n        <div className='descriptionLine'>\r\n            <img className='descriptionIcon' src={props.icon}/>\r\n            <div className = \"descriptionTitle\">{props.title}</div>\r\n            <div className = \"descriptionContent\">{props.content}</div>\r\n    </div>   \r\n    );\r\n}\r\n\r\nexport default BoxDescription;","C:\\Users\\wet57\\Desktop\\react\\react-git\\yonal-front-react\\client\\src\\component\\GoogleButton.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":22},{"ruleId":"118","severity":1,"message":"122","line":2,"column":24,"nodeType":"120","messageId":"121","endLine":2,"endColumn":29},{"ruleId":"118","severity":1,"message":"123","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":17},{"ruleId":"118","severity":1,"message":"124","line":8,"column":19,"nodeType":"120","messageId":"121","endLine":8,"endColumn":29},{"ruleId":"118","severity":1,"message":"125","line":9,"column":20,"nodeType":"120","messageId":"121","endLine":9,"endColumn":31},{"ruleId":"118","severity":1,"message":"126","line":10,"column":21,"nodeType":"120","messageId":"121","endLine":10,"endColumn":33},{"ruleId":"118","severity":1,"message":"127","line":11,"column":21,"nodeType":"120","messageId":"121","endLine":11,"endColumn":33},{"ruleId":"118","severity":1,"message":"128","line":15,"column":9,"nodeType":"120","messageId":"121","endLine":15,"endColumn":21},{"ruleId":"129","severity":1,"message":"130","line":39,"column":13,"nodeType":"131","endLine":39,"endColumn":56},{"ruleId":"129","severity":1,"message":"130","line":44,"column":9,"nodeType":"131","endLine":44,"endColumn":52},{"ruleId":"129","severity":1,"message":"130","line":45,"column":13,"nodeType":"131","endLine":45,"endColumn":56},{"ruleId":"118","severity":1,"message":"132","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":27,"column":21,"nodeType":"135","messageId":"136","endLine":27,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":38,"column":15,"nodeType":"139","endLine":46,"endColumn":6},{"ruleId":"137","severity":1,"message":"140","line":46,"column":7,"nodeType":"141","endLine":46,"endColumn":9,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":96,"column":26,"nodeType":"139","messageId":"145","endLine":96,"endColumn":28},{"ruleId":"118","severity":1,"message":"132","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"146","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":81,"column":13,"nodeType":"131","endLine":81,"endColumn":56},{"ruleId":"137","severity":1,"message":"138","line":49,"column":15,"nodeType":"139","endLine":51,"endColumn":6},{"ruleId":"137","severity":1,"message":"147","line":51,"column":7,"nodeType":"141","endLine":51,"endColumn":9,"suggestions":"148"},{"ruleId":"129","severity":1,"message":"130","line":62,"column":18,"nodeType":"131","endLine":62,"endColumn":56},{"ruleId":"129","severity":1,"message":"130","line":72,"column":18,"nodeType":"131","endLine":72,"endColumn":56},{"ruleId":"118","severity":1,"message":"146","line":3,"column":9,"nodeType":"120","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":24,"column":62,"nodeType":"135","messageId":"151","endLine":24,"endColumn":63},{"ruleId":"149","severity":1,"message":"150","line":24,"column":66,"nodeType":"135","messageId":"151","endLine":24,"endColumn":67},{"ruleId":"137","severity":1,"message":"138","line":60,"column":15,"nodeType":"139","endLine":68,"endColumn":6},{"ruleId":"137","severity":1,"message":"152","line":68,"column":7,"nodeType":"141","endLine":68,"endColumn":9,"suggestions":"153"},{"ruleId":"143","severity":1,"message":"144","line":124,"column":26,"nodeType":"139","messageId":"145","endLine":124,"endColumn":28},{"ruleId":"129","severity":1,"message":"130","line":152,"column":17,"nodeType":"131","endLine":152,"endColumn":60},{"ruleId":"137","severity":1,"message":"138","line":40,"column":15,"nodeType":"139","endLine":46,"endColumn":6},{"ruleId":"137","severity":1,"message":"154","line":46,"column":7,"nodeType":"141","endLine":46,"endColumn":9,"suggestions":"155"},{"ruleId":"149","severity":1,"message":"150","line":80,"column":66,"nodeType":"135","messageId":"151","endLine":80,"endColumn":67},{"ruleId":"149","severity":1,"message":"150","line":80,"column":70,"nodeType":"135","messageId":"151","endLine":80,"endColumn":71},{"ruleId":"129","severity":1,"message":"130","line":88,"column":13,"nodeType":"131","endLine":88,"endColumn":56},{"ruleId":"129","severity":1,"message":"130","line":6,"column":13,"nodeType":"131","endLine":6,"endColumn":64},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'isLogin' is assigned a value but never used.","'setIsLogin' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'setUserEmail' is assigned a value but never used.","'setUserImage' is assigned a value but never used.","'projectStyle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'fetchApi' and 'flag'. Either include them or remove the dependency array.","ArrayExpression",["158"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.",["159"],"no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'fetchApi', 'fetchApi3', and 'flag'. Either include them or remove the dependency array.",["160"],"React Hook useEffect has a missing dependency: 'user_email'. Either include it or remove the dependency array.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [fetchApi, flag]",{"range":"170","text":"171"},"Update the dependencies array to be: [fetchApi]",{"range":"172","text":"173"},"Update the dependencies array to be: [fetchApi, fetchApi3, flag]",{"range":"174","text":"175"},"Update the dependencies array to be: [user_email]",{"range":"176","text":"177"},[2135,2137],"[fetchApi, flag]",[1614,1616],"[fetchApi]",[3090,3092],"[fetchApi, fetchApi3, flag]",[1552,1554],"[user_email]"]