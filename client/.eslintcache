[{"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\index.js":"1","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\App.js":"2","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\reportWebVitals.js":"3","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePage.js":"4","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPage.js":"5","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\Main.js":"6","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\CreateProject.js":"7","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\CopyLink.js":"8","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\ResultForManager.js":"9","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\GoogleButton.js":"10","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\ResultForGuest.js":"11","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\Guest.js":"12","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\InvitedHome.js":"13","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\Vote.js":"14","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\CalendarComponent.js":"15","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\BoxDescription.js":"16","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\BtnCalendar.js":"17"},{"size":732,"mtime":1612879432211,"results":"18","hashOfConfig":"19"},{"size":172,"mtime":1614251264206,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1612879432214,"results":"21","hashOfConfig":"19"},{"size":2454,"mtime":1614251264211,"results":"22","hashOfConfig":"19"},{"size":1054,"mtime":1614251264232,"results":"23","hashOfConfig":"19"},{"size":1255,"mtime":1614256380474,"results":"24","hashOfConfig":"19"},{"size":4202,"mtime":1614251264220,"results":"25","hashOfConfig":"19"},{"size":413,"mtime":1614251264219,"results":"26","hashOfConfig":"19"},{"size":3224,"mtime":1614251264230,"results":"27","hashOfConfig":"19"},{"size":1497,"mtime":1614251264209,"results":"28","hashOfConfig":"19"},{"size":3335,"mtime":1614251264422,"results":"29","hashOfConfig":"19"},{"size":1510,"mtime":1614251264248,"results":"30","hashOfConfig":"19"},{"size":1800,"mtime":1614255542287,"results":"31","hashOfConfig":"19"},{"size":576,"mtime":1614251264432,"results":"32","hashOfConfig":"19"},{"size":2422,"mtime":1614251264241,"results":"33","hashOfConfig":"19"},{"size":392,"mtime":1613914956889,"results":"34","hashOfConfig":"19"},{"size":527,"mtime":1612879432206,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"awt6a5",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\index.js",["80","81","82"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nfunction formatName(user){\r\n  return user.firstName+ \" \" +user.lastName;\r\n}\r\n\r\nconst user = {\r\n  firstName: 'Jihyo',\r\n  lastName: \"Kim\"\r\n};\r\n\r\nconst element = (\r\n  <h1 className=\"greeting\">Hello, world!</h1>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["83","84"],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\App.js",[],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePage.js",["85","86"],"import React, {useState} from 'react';\r\nimport {BrowserRouter, Route, Link} from 'react-router-dom'\r\nimport yonal_logo from '../image/yonal_logo.png'\r\nimport Main from '../screen/HomePages/Main'\r\nimport LinkPage from '../screen/LinkPage'\r\nimport CreateProject from '../screen/HomePages/CreateProject'\r\nimport CopyLink from '../screen/HomePages/CopyLink'\r\nimport ResultForManager from '../screen/HomePages/ResultForManager'\r\nimport GoogleButton from '../component/GoogleButton'\r\nimport ResultForGuest from './LinkPages/ResultForGuest'\r\n\r\nconst HomePage = () => {\r\n  const [isLogin, setIsLogin] = useState(null);\r\n  const [userName, setUserName] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  const [userImage, setUserImage] = useState(null);\r\n\r\n  const sendData = (name, email, image, isLogin) => {\r\n    setIsLogin(isLogin);\r\n    setUserName(name);\r\n    setUserEmail(email);\r\n    setUserImage(image);\r\n  };\r\n\r\n  const Logout = () => {\r\n    setIsLogin(false);\r\n    setUserName(null);\r\n    setUserEmail(null);\r\n    setUserImage(null);\r\n  };\r\n\r\n  return (\r\n    isLogin?\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Link to='./'> \r\n            <button onClick={Logout}>로그아웃</button>\r\n        </Link>\r\n        <div className='logoText'>우리 모두 일정 맞추기</div>\r\n        <Link to={{pathname: './home', name:userName, email:userEmail, image:userImage}}>\r\n          <img className='Applogo' src={yonal_logo}/>\r\n        </Link>\r\n        <Route path=\"/homepage\" component={this}/>\r\n        <Route path=\"/home\" component={Main}/>\r\n        <Route path=\"/create\" component={CreateProject}/>\r\n        <Route path=\"/copylink\" component={CopyLink}/>\r\n        <Route path=\"/totalcal\" component={ResultForManager}/>\r\n      </BrowserRouter>\r\n    </div>\r\n    :\r\n    <div className=\"App\">\r\n        <BrowserRouter>\r\n          <div className='logoText'>우리 모두 일정 맞추기</div>\r\n          <Link to={{pathname: './'}}>\r\n              <img className='Applogo' src={yonal_logo}/>  \r\n          </Link>\r\n          <div> <GoogleButton sendData={sendData}/>\r\n          </div>\r\n          <Link to='./link'>\r\n              <button>외부링크</button>\r\n          </Link>\r\n          <Route path=\"/homepage\" component={this}/>\r\n          <Route path=\"/link\" component={LinkPage}/>\r\n          <Route path=\"/share\" component={ResultForGuest}/>\r\n        </BrowserRouter>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPage.js",[],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\Main.js",["87","88","89","90","91"],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\CreateProject.js",["92","93","94","95","96","97"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Link} from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport leadingZeros from 'leadingzero'\r\n\r\n// projectUser테이블에 관계추가하는 api생성 후 추가할 예정(isManager=1)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: 'flex',\r\n      justifyContent: \"center\",\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      width: 300,\r\n    },\r\n  }));\r\n  \r\n\r\nconst CreateProject = ({location}) => {\r\n    \r\n    const classes = useStyles();\r\n    const [user_email,] = useState(location.email);\r\n    const [myId, setMyId] = useState(null);\r\n    const [name, setName] = useState(null);\r\n    const [startDate, setStartDate] = useState(getTimeStamp());\r\n    const [endDate, setEndDate] = useState(getTimeStamp());\r\n    const [inviteLink, ] = useState('http://localhost:3000/invite/'+getUUID());\r\n\r\n    useEffect(async () =>{\r\n        await axios.post('http://localhost:5000/v1/get/userId', {\r\n            email: user_email\r\n        }).then(function(res){\r\n            setMyId(res.data.userId);\r\n        });\r\n    },[])\r\n\r\n    const fetchApi = async() => {\r\n        const res = await axios.post('http://localhost:5000/v1/create/project', {\r\n            name:name,\r\n            userId:myId,\r\n            startDate:startDate,\r\n            endDate:endDate,\r\n            inviteLink:inviteLink\r\n        });\r\n    };\r\n\r\n    function getTimeStamp() {\r\n\r\n        var d = new Date();\r\n        var s =\r\n            leadingZeros(d.getFullYear(), 2) + '-' +\r\n            leadingZeros(d.getMonth() + 1, 2) + '-' +\r\n            leadingZeros(d.getDate(), 2);\r\n    \r\n        return s;\r\n    }\r\n    \r\n    function getUUID() { // UUID v4 generator in JavaScript (RFC4122 compliant)\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n          var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 3 | 8);\r\n          return v.toString(16);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TextField \r\n                id=\"name\"\r\n                label=\"프로젝트 이름\"\r\n                className={classes.textField}\r\n                error={name === \"\" ? true : false}\r\n                helperText=\"이름을 입력해주세요\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)} \r\n            />\r\n\r\n            <br></br>\r\n            <div className='period'>\r\n                start date\r\n                <form className={classes.container} noValidate>\r\n                    <TextField\r\n                        id=\"startdate\"\r\n                        type=\"date\"\r\n                        error={startDate < getTimeStamp() ? true : false}\r\n                        helperText=\"현재 날짜보다 전날을 선택할 수 없습니다\"\r\n                        className={classes.textField}\r\n                        value={startDate} \r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                    />\r\n                </form>\r\n                end date\r\n                <form className={classes.container} noValidate>\r\n                    <TextField\r\n                        id=\"enddate\"\r\n                        type=\"date\"\r\n                        error={startDate > endDate ? true : false}\r\n                        helperText=\"시작 날짜 이후의 날짜를 선택하세요\"\r\n                        className={classes.textField}\r\n                        value={endDate} \r\n                        onChange={(e) => setEndDate(e.target.value)}\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                    />\r\n                </form>\r\n            </div>\r\n            <Link to={{pathname: './copylink', value: inviteLink}}>\r\n                <button className = 'indexBtn' onClick={fetchApi} disabled={false}>확인</button>\r\n            </Link>\r\n         \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateProject;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\CopyLink.js",[],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\ResultForManager.js",["98","99","100","101","102","103","104"],"import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport {Link} from 'react-router-dom'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport '../calendar.css';\r\nimport axios from 'axios';\r\nimport { ListItemSecondaryAction } from '@material-ui/core';\r\n\r\n/*  참여한 모든 유저의 date데이터를 api로 불러온다.\r\n    이렇게 불러온 데이터를 종합하여 캘린더에 출력한다. */\r\n\r\n// props를 통해 projectID를 전달받은 후 해당 프로젝트 반환\r\n\r\nfunction getUUID() { // UUID v4 generator in JavaScript (RFC4122 compliant)\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 3 | 8);\r\n      return v.toString(16);\r\n    });\r\n}\r\n\r\nconst ResultForManager = ({location}) => {\r\n    const [value, ] = useState(new Date());\r\n    const [apiData, setApiData] = useState([\r\n        {\r\n           votedata:\"\"\r\n        }\r\n    ]);\r\n    const [shareLink,] = useState('http://localhost:3000/share/'+getUUID());\r\n\r\n    function parse(str) {\r\n        var y = str.substr(0,4);\r\n        var m = str.substr(4,2);\r\n        var d = str.substr(6,2);\r\n        var r = new Date(y,m-1,d);\r\n        return  r;\r\n    };\r\n\r\n    function jointpars(apiData){\r\n        var voteData = JSON.parse(apiData.votedata);\r\n        voteData = voteData[0].filter(function (element){\r\n            if (element) return element.date;\r\n        });\r\n\r\n        var joint = [];\r\n        for( var i= 0;i<voteData.length;i++){\r\n            joint = [\r\n                ...joint,\r\n                {\r\n                    votedata:voteData[i].date\r\n                }\r\n            ]\r\n        }\r\n        return joint;\r\n    }\r\n    \r\n    useEffect(async () =>{\r\n        await fetchApi().then(res => jointpars(res)).then(res => setApiData(res));\r\n    },[]);\r\n\r\n    function fetchApi(){\r\n        var url = 'http://localhost:5000/v1/get/project-result';\r\n        return axios.post(url, {projectId:location.projectId}).then(function (res) {\r\n            return res.data;\r\n        })\r\n    }\r\n    function fetchApi2(){\r\n        var url = 'http://localhost:5000/v1/save/shareLink';\r\n        return axios.post(url, {projectId:location.projectId, shareLink:shareLink}).then(function (res) {\r\n            return res.data;\r\n        })\r\n    }\r\n\r\n\r\n    function tileClassName(params){\r\n        if(params.view === 'month' && !(apiData.length ===0))\r\n        if(apiData.some(x => parse(x.votedata.replaceAll('-','')).valueOf() === params.date.valueOf()))\r\n            return 'selected_day';\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>종합된 날짜</h1>\r\n            <div>\r\n            {apiData ?<div>\r\n            <Calendar className=\"calendar\"\r\n                value = {value}\r\n                minDate = {value}\r\n                tileClassName = {tileClassName} \r\n            /> </div>\r\n            :  \"Loading\"\r\n            }\r\n            </div>\r\n            <Link to={{pathname: './copylink', value: shareLink}}>\r\n                <button className = 'indexBtn' onClick={fetchApi2} disabled={false}>결과 공유하기</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ResultForManager;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\GoogleButton.js",["105"],"import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport GoogleLogin from 'react-google-login';\r\nimport axios from 'axios';\r\n\r\nconst clientId = \"88721696570-626294ccdp8h1vthmb7sce60mep2i15q.apps.googleusercontent.com\";\r\n// 클라이언트 보안 비밀번호 Z4L3SvyZM_xL7YyhLN4sufuB\r\n\r\nconst GoogleButton = ({sendData , history}) => {\r\n\r\n    const onSuccess = async(response) => {\r\n\r\n        await axios.post('http://localhost:5000/v1/register/google-login', {\r\n            user_name:response.getBasicProfile().getName(),\r\n            user_email:response.getBasicProfile().getEmail(),\r\n            user_image:response.getBasicProfile().getImageUrl()\r\n        });\r\n        sendData(response.getBasicProfile().getName(), response.getBasicProfile().getEmail(), response.getBasicProfile().getImageUrl(), true);\r\n        history.push({pathname: \"./home\", name:response.getBasicProfile().getName(), email:response.getBasicProfile().getEmail(), image:response.getBasicProfile().getImageUrl()});\r\n    }\r\n\r\n    const onFailure = (error) => {\r\n        console.log(error);\r\n        sendData(null, null, null, false);\r\n        history.push({pathname: \"./homepage\"});\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                responseType={\"id_token\"}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(GoogleButton);","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\ResultForGuest.js",["106","107","108"],"import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport '../calendar.css';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { ListItemSecondaryAction } from '@material-ui/core';\r\n\r\n/*  참여한 모든 유저의 date데이터를 api로 불러온다.\r\n    이렇게 불러온 데이터를 종합하여 캘린더에 출력한다. */\r\n\r\n// projectId는 링크를 통해 유추한다.\r\n\r\nconst useStyles = makeStyles({\r\n    foo: props => ({\r\n        backgroundColor: props.backgroundColor,\r\n    }),\r\n    bar: {\r\n        // CSS property\r\n        color: props => props.color,\r\n    },\r\n});\r\n    \r\n\r\n\r\nconst ResultForGuest = () => {\r\n    const props = { backgroundColor: 'black', color: '#284b72' };\r\n    const classes = useStyles(props);\r\n\r\n    const [value, ] = useState(new Date());\r\n    const [apiData, setApiData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [flag, setFlag] = useState(false);\r\n    useEffect(async () =>{\r\n        if(flag) setFlag(false);\r\n        setIsLoading(false);\r\n        await fetchApi().then(res => setApiData(res)).then(setIsLoading(true));   \r\n    },[]);\r\n    useEffect(()=>{\r\n        if(isLoading) setFlag(true);\r\n    },[isLoading]);\r\n\r\n\r\n\r\n    function parse(str) {\r\n        var y = str.substr(0,4);\r\n        var m = str.substr(4,2);\r\n        var d = str.substr(6,2); \r\n        return  new Date(y,m-1,d);\r\n    };\r\n    \r\n    function jointpars(apiData){\r\n        var voteData = JSON.parse(apiData.votedata);\r\n\r\n        var totaljoint = [];\r\n        for(var j=0; j<voteData.length;j++){\r\n            var joint = [];\r\n            for( var i= 0;i<voteData[j].length;i++){\r\n                joint = [\r\n                    ...joint,\r\n                    {\r\n                        votedata:voteData[j][i].date\r\n                    }\r\n                ]\r\n            }\r\n            totaljoint=[\r\n                ...totaljoint,\r\n                {\r\n                    votedata:joint\r\n                }\r\n            ]\r\n        }\r\n        console.log(totaljoint);\r\n\r\n        return totaljoint;\r\n    }\r\n    \r\n    async function fetchApi(){\r\n        return axios.post('http://localhost:5000/v1/get/project-result-from-link', {shareLink:document.location.href}).then(function (res) {\r\n            return jointpars(res.data);\r\n        })\r\n    }    \r\n    \r\n    function tileClassName(params){\r\n        if(!(apiData.length===0))\r\n            return apiData.map(i=>comparFerUser(params,i));\r\n    }\r\n\r\n    function comparFerUser(params,idx){\r\n        if(params.view === 'month' && idx)\r\n            if(idx.votedata.some(x => parse(x.votedata.replaceAll('-','')).valueOf() === params.date.valueOf())){\r\n                console.log(params,'finish',idx,flag);\r\n                return `${classes.foo} ${classes.bar}`;\r\n            }\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <h1>종합된 날짜</h1>\r\n            <div>\r\n            {isLoading ?\r\n            <Calendar className=\"calendar\"\r\n                value = {value}\r\n                minDate = {value}\r\n                tileClassName = {flag?tileClassName:\"\" } \r\n            />\r\n            : \"Loading\"\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ResultForGuest;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\Guest.js",["109","110","111"],"import React, { useState, useEffect } from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport BoxDescription from '../../component/BoxDescription'\r\nimport icon_plan from '../../image/yonal_icon_plan.png'\r\nimport axios from 'axios';\r\n\r\nfunction saveData(projectId, nickname) {\r\n    axios.post('http://localhost:5000/v1/link/new-user', {\r\n        project_id:projectId,\r\n        user_nickname:nickname\r\n    });\r\n\r\n}\r\n\r\nconst Guest = ({location, history}) => {\r\n    const [nickname, setNickname] = useState('');\r\n    const onClick = () => {\r\n        if(nickname == ''){\r\n            alert(\"닉네임을 입력해주세요.\");\r\n        }else{\r\n            saveData(location.projectId, nickname);\r\n            history.push({pathname: \"/calendar\", nickname:nickname, projectId: location.projectId});\r\n        }\r\n    }\r\n\r\n    const getObject = () => {\r\n        return `{{pathname: '/vote', nickname: ${nickname}}}`;\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <BoxDescription icon={icon_plan} title={location.projectTitle}/>\r\n\r\n            <h3 className='nicknameGuide'>별명을 입력해주세요.</h3>\r\n            <form>\r\n            <label>\r\n                <input className= \"inputField\" type=\"text\" value={nickname} onChange={(e) => setNickname(e.target.value)} placeholder = \"별명\" />\r\n            </label>\r\n            <input type=\"button\" value=\"투표하러 가기\" className=\"btn\" onClick={onClick}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Guest);","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\InvitedHome.js",[],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\Vote.js",[],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\CalendarComponent.js",["112","113"],"import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport '../calendar.css';\r\nimport axios from 'axios';\r\n\r\n/*  사용자가 참여 가능한 날짜를 선택할 수 있는 달력 컴포넌트\r\n    사용자가 날짜를 선택하면 해당 날짜가 days에 date형식으로 저장된다.\r\n    이어서 버튼을 누르면, days에 저장된 데이터가 db로 업로드된다. */\r\n\r\n// nickname은 props를 통해 전달되어야 한다.\r\n// projectId는 링크를 통해 유추한다.\r\n\r\nconst CalendarComponent = ({location, history}) => {\r\n    const projectId = location.projectId;\r\n    const nickname = location.nickname;\r\n\r\n    const [days, setDays] = useState([]);\r\n    const [value, ] = useState(new Date());\r\n\r\n    function check_selected_days(nextValue){\r\n        var flag = -1;\r\n        if(nextValue.valueOf() === value.valueOf()) return;\r\n        for(var day in days){\r\n            if(days[day].valueOf() === nextValue.valueOf()){\r\n                flag = day;\r\n                break;\r\n            }\r\n        }\r\n        if(flag===-1){\r\n            setDays(days.concat(nextValue));\r\n        }else{\r\n            var fore = days.splice(0, flag);\r\n            var back = days.splice(1, days.length);\r\n            var tmp = fore.concat(back);\r\n            setDays(tmp);\r\n        }\r\n    }\r\n    \r\n    const fetchApi = async() =>{\r\n               const res = await axios.post('http://localhost:5000/v1/save/project-userId-date',{\r\n                   projectId : projectId,// for test\r\n                   userId :2,// for test\r\n                   date:days\r\n               });\r\n    }\r\n\r\n    function tileClassName(params){\r\n        if(params.view === 'month' && !(days.length ===0))\r\n            if(days.some(x => x.valueOf() === params.date.valueOf()))\r\n                return 'selected_day'\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>가능한 날짜</h1>\r\n            <Calendar\r\n                className=\"calendar\"\r\n                onChange={check_selected_days} \r\n                value={value}\r\n                minDate={value}\r\n                tileClassName={tileClassName}\r\n            />\r\n            <Link to='/totalcal'>\r\n            <button className = 'btn' onClick={fetchApi}>YONAL</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarComponent;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\BoxDescription.js",["114"],"import React, {} from 'react';\r\n\r\nconst BoxDescription = (props) => {\r\n    return(\r\n        <div className='descriptionLine'>\r\n            <img className='descriptionIcon' src={props.icon}/>\r\n            <div className = \"descriptionTitle\">{props.title}</div>\r\n            <div className = \"descriptionContent\">{props.content}</div>\r\n    </div>   \r\n    );\r\n}\r\n\r\nexport default BoxDescription;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\BtnCalendar.js",[],{"ruleId":"115","severity":1,"message":"116","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":20},{"ruleId":"115","severity":1,"message":"119","line":11,"column":7,"nodeType":"117","messageId":"118","endLine":11,"endColumn":11},{"ruleId":"115","severity":1,"message":"120","line":16,"column":7,"nodeType":"117","messageId":"118","endLine":16,"endColumn":14},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":41,"column":11,"nodeType":"127","endLine":41,"endColumn":54},{"ruleId":"125","severity":1,"message":"126","line":55,"column":15,"nodeType":"127","endLine":55,"endColumn":58},{"ruleId":"115","severity":1,"message":"128","line":1,"column":28,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"129","line":6,"column":11,"nodeType":"117","messageId":"118","endLine":6,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":11,"column":15,"nodeType":"132","endLine":21,"endColumn":6},{"ruleId":"130","severity":1,"message":"133","line":21,"column":7,"nodeType":"134","endLine":21,"endColumn":9,"suggestions":"135"},{"ruleId":"125","severity":1,"message":"126","line":25,"column":18,"nodeType":"127","endLine":25,"endColumn":56},{"ruleId":"130","severity":1,"message":"131","line":32,"column":15,"nodeType":"132","endLine":38,"endColumn":6},{"ruleId":"130","severity":1,"message":"136","line":38,"column":7,"nodeType":"134","endLine":38,"endColumn":9,"suggestions":"137"},{"ruleId":"115","severity":1,"message":"138","line":41,"column":15,"nodeType":"117","messageId":"118","endLine":41,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":63,"column":49,"nodeType":"141","messageId":"142","endLine":63,"endColumn":51},{"ruleId":"143","severity":1,"message":"144","line":63,"column":65,"nodeType":"141","messageId":"145","endLine":63,"endColumn":66},{"ruleId":"143","severity":1,"message":"144","line":63,"column":69,"nodeType":"141","messageId":"145","endLine":63,"endColumn":70},{"ruleId":"115","severity":1,"message":"146","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":33},{"ruleId":"139","severity":1,"message":"140","line":16,"column":45,"nodeType":"141","messageId":"142","endLine":16,"endColumn":47},{"ruleId":"143","severity":1,"message":"144","line":16,"column":61,"nodeType":"141","messageId":"145","endLine":16,"endColumn":62},{"ruleId":"143","severity":1,"message":"144","line":16,"column":65,"nodeType":"141","messageId":"145","endLine":16,"endColumn":66},{"ruleId":"147","severity":1,"message":"148","line":40,"column":39,"nodeType":"149","messageId":"150","endLine":40,"endColumn":48},{"ruleId":"130","severity":1,"message":"131","line":56,"column":15,"nodeType":"132","endLine":58,"endColumn":6},{"ruleId":"130","severity":1,"message":"151","line":58,"column":7,"nodeType":"134","endLine":58,"endColumn":9,"suggestions":"152"},{"ruleId":"115","severity":1,"message":"128","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":24},{"ruleId":"115","severity":1,"message":"146","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":33},{"ruleId":"130","severity":1,"message":"131","line":34,"column":15,"nodeType":"132","endLine":38,"endColumn":6},{"ruleId":"130","severity":1,"message":"153","line":38,"column":7,"nodeType":"134","endLine":38,"endColumn":9,"suggestions":"154"},{"ruleId":"115","severity":1,"message":"155","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":18,"column":21,"nodeType":"141","messageId":"142","endLine":18,"endColumn":23},{"ruleId":"115","severity":1,"message":"156","line":26,"column":11,"nodeType":"117","messageId":"118","endLine":26,"endColumn":20},{"ruleId":"115","severity":1,"message":"157","line":17,"column":11,"nodeType":"117","messageId":"118","endLine":17,"endColumn":19},{"ruleId":"115","severity":1,"message":"138","line":42,"column":22,"nodeType":"117","messageId":"118","endLine":42,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":6,"column":13,"nodeType":"127","endLine":6,"endColumn":64},"no-unused-vars","'formatName' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'element' is assigned a value but never used.","no-native-reassign",["158"],"no-negated-in-lhs",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'myName' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'myEmail' and 'myProjects'. Either include them or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has a missing dependency: 'user_email'. Either include it or remove the dependency array.",["161"],"'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","'ListItemSecondaryAction' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has missing dependencies: 'fetchApi' and 'flag'. Either include them or remove the dependency array.",["163"],"'useEffect' is defined but never used.","'getObject' is assigned a value but never used.","'nickname' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [myEmail, myProjects]",{"range":"172","text":"173"},"Update the dependencies array to be: [user_email]",{"range":"174","text":"175"},"Update the dependencies array to be: [fetchApi]",{"range":"176","text":"177"},"Update the dependencies array to be: [fetchApi, flag]",{"range":"178","text":"179"},[664,666],"[myEmail, myProjects]",[1186,1188],"[user_email]",[1750,1752],"[fetchApi]",[1144,1146],"[fetchApi, flag]"]