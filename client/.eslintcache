[{"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\index.js":"1","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\App.js":"2","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\reportWebVitals.js":"3","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\CopyLink.js":"4","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\CreateProject.js":"5","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\ResultForManager.js":"6","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\GoogleButton.js":"7","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\ResultForGuest.js":"8","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\Guest.js":"9","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\CalendarComponent.js":"10","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\InvitedHome.js":"11","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\BtnCalendar.js":"12","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\BoxDescription.js":"13","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\VoteFinished.js":"14","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePage2.js":"15","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LoginHome.js":"16","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\LoginUserMain.js":"17"},{"size":777,"mtime":1614576440053,"results":"18","hashOfConfig":"19"},{"size":1425,"mtime":1614779805028,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1612879432214,"results":"21","hashOfConfig":"19"},{"size":491,"mtime":1614576440057,"results":"22","hashOfConfig":"19"},{"size":4994,"mtime":1614781617230,"results":"23","hashOfConfig":"19"},{"size":6081,"mtime":1614779348904,"results":"24","hashOfConfig":"19"},{"size":1746,"mtime":1614780616670,"results":"25","hashOfConfig":"19"},{"size":4433,"mtime":1614576440104,"results":"26","hashOfConfig":"19"},{"size":1874,"mtime":1614779401300,"results":"27","hashOfConfig":"19"},{"size":3065,"mtime":1614779385530,"results":"28","hashOfConfig":"19"},{"size":2562,"mtime":1614781325477,"results":"29","hashOfConfig":"19"},{"size":527,"mtime":1612879432206,"results":"30","hashOfConfig":"19"},{"size":392,"mtime":1613914956889,"results":"31","hashOfConfig":"19"},{"size":922,"mtime":1614779440218,"results":"32","hashOfConfig":"19"},{"size":1523,"mtime":1614781172450,"results":"33","hashOfConfig":"19"},{"size":1549,"mtime":1614781742032,"results":"34","hashOfConfig":"19"},{"size":1858,"mtime":1614782444544,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"awt6a5",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\index.js",["84","85","86"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nfunction formatName(user){\r\n  return user.firstName+ \" \" +user.lastName;\r\n}\r\n\r\nconst user = {\r\n  firstName: 'Jihyo',\r\n  lastName: \"Kim\"\r\n};\r\n\r\nconst element = (\r\n  <h1 className=\"greeting\">Hello, world!</h1>\r\n);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["87","88"],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\App.js",["89"],"import './App.css';\r\nimport React from 'react';\r\nimport { Route,BrowserRouter } from 'react-router-dom';\r\nimport LoginHome from './screen/LoginHome';\r\nimport InvitedHome from './screen/LinkPages/InvitedHome';\r\nimport Guest from './screen/LinkPages/Guest';\r\nimport CalendarComponent from './screen/LinkPages/CalendarComponent';\r\nimport VoteFinished from './screen/LinkPages/VoteFinished';\r\nimport ResultForGuest from './screen/LinkPages/ResultForGuest';\r\nimport LoginUserMain from './screen/HomePages/LoginUserMain';\r\nimport CreateProject from './screen/HomePages/CreateProject';\r\nimport CopyLink from './screen/HomePages/CopyLink';\r\nimport ResultForManager from './screen/HomePages/ResultForManager';\r\nimport HomePage2 from './screen/HomePage2';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/loginpage\" component={HomePage2}/>\r\n      <Route path=\"/loginhome\" component={LoginHome}/>\r\n      <Route path=\"/invite\" component={InvitedHome}/>\r\n      <Route path=\"/guest/\" component={Guest}/>\r\n      <Route path='/calendar' component={CalendarComponent}/>\r\n      <Route path='/voteFinished' component={VoteFinished}/>\r\n      <Route path=\"/share\" component={ResultForGuest}/>\r\n      <Route path=\"/create\" component={CreateProject}/>\r\n      <Route path=\"/copylink\" component={CopyLink}/>\r\n      <Route path=\"/totalcal\" component={ResultForManager}/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\CopyLink.js",[],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\CreateProject.js",["90","91","92","93","94","95","96"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {withRouter} from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport leadingZeros from 'leadingzero'\r\nimport yonal_logo from '../../image/yonal_logo.png'\r\n\r\n// projectUser테이블에 관계추가하는 api생성 후 추가할 예정(isManager=1)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: 'flex',\r\n      justifyContent: \"center\",\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      width: 300,\r\n    },\r\n  }));\r\n  \r\n\r\nconst CreateProject = ({location, history}) => {\r\n    \r\n    const classes = useStyles();\r\n    const [user_email,] = useState(location.email);\r\n    const [myId, setMyId] = useState(null);\r\n    const [name, setName] = useState(null);\r\n    const [startDate, setStartDate] = useState(getTimeStamp());\r\n    const [endDate, setEndDate] = useState(getTimeStamp());\r\n    const [inviteLink, ] = useState('http://localhost:3000/invite/'+getUUID());\r\n    const isMobile = useMediaQuery ({\r\n        query : \"(max-width : 500px)\"\r\n    })\r\n    const boxStyle = isMobile? 'mNicknameGuide' : 'nicknameGuide';\r\n\r\n    useEffect(async () =>{\r\n        await axios.post('http://localhost:5000/v1/get/userId', {\r\n            email: user_email\r\n        }).then(function(res){\r\n            setMyId(res.data.userId);\r\n        });\r\n    },[])\r\n\r\n    const fetchApi = async() => {\r\n        const res = await axios.post('http://localhost:5000/v1/create/project', {\r\n            name:name,\r\n            userId:myId,\r\n            startDate:startDate,\r\n            endDate:endDate,\r\n            inviteLink:inviteLink\r\n        });\r\n    };\r\n\r\n    const onClick = () => {\r\n        if(name == null){\r\n            alert(\"프로젝트 이름을 입력해주세요.\");\r\n        }else{\r\n            fetchApi();\r\n            history.push({pathname: \"/copylink\", inviteLink: inviteLink});\r\n        }\r\n    }\r\n\r\n    function getTimeStamp() {\r\n\r\n        var d = new Date();\r\n        var s =\r\n            leadingZeros(d.getFullYear(), 2) + '-' +\r\n            leadingZeros(d.getMonth() + 1, 2) + '-' +\r\n            leadingZeros(d.getDate(), 2);\r\n    \r\n        return s;\r\n    }\r\n    \r\n    function getUUID() { // UUID v4 generator in JavaScript (RFC4122 compliant)\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n          var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 3 | 8);\r\n          return v.toString(16);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='logoText'>우리 모두 일정 맞추기</div>\r\n            <img className='Applogo' src={yonal_logo}/>  \r\n\r\n            <div className={boxStyle}>\r\n                <TextField \r\n                    id=\"name\"\r\n                    label=\"프로젝트 이름\"\r\n                    className={classes.textField}\r\n                    error={name === \"\" ? true : false}\r\n                    helperText=\"이름을 입력해주세요\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)} \r\n                />\r\n\r\n                <br></br>\r\n                <div className='period'>\r\n                    시작 날짜\r\n                    <form className={`classes.container`} noValidate>\r\n                        <TextField\r\n                            id=\"startdate\"\r\n                            type=\"date\"\r\n                            error={startDate < getTimeStamp() ? true : false}\r\n                            helperText=\"현재 날짜보다 전날을 선택할 수 없습니다\"\r\n                            className={classes.textField}\r\n                            value={startDate} \r\n                            onChange={(e) => setStartDate(e.target.value)}\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                        />\r\n                    </form>\r\n                    종료 날짜\r\n                    <form className={classes.container} noValidate>\r\n                        <TextField\r\n                            id=\"enddate\"\r\n                            type=\"date\"\r\n                            error={startDate > endDate ? true : false}\r\n                            helperText=\"시작 날짜 이후의 날짜를 선택하세요\"\r\n                            className={classes.textField}\r\n                            value={endDate} \r\n                            onChange={(e) => setEndDate(e.target.value)}\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <button className = 'btn' onClick={onClick}>확인</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(CreateProject);","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\ResultForManager.js",["97","98","99","100","101","102","103","104","105","106"],"import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport {Link} from 'react-router-dom'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport '../calendar.css';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport yonal_logo from '../../image/yonal_logo.png'\r\nimport icon_plan from '../../image/yonal_icon_plan.png'\r\nimport BoxDescription from '../../component/BoxDescription'\r\n\r\n\r\n\r\n/*  참여한 모든 유저의 date데이터를 api로 불러온다.\r\n    이렇게 불러온 데이터를 종합하여 캘린더에 출력한다. */\r\n\r\n// props를 통해 projectID를 전달받은 후 해당 프로젝트 반환\r\nlet useStyles = makeStyles({ foo: props => ({backgroundColor: props.backgroundColor, }),}); \r\nconst rgbHex = require('rgb-hex');\r\n\r\nfunction getUUID() { // UUID v4 generator in JavaScript (RFC4122 compliant)\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 3 | 8);\r\n      return v.toString(16);\r\n    });\r\n}\r\n\r\nconst ResultForManager = ({location}) => {\r\n    let classes0 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0)});\r\n    let classes1 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.1)});\r\n    let classes2 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.2)});\r\n    let classes3 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.3)});\r\n    let classes4 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.4)});\r\n    let classes5 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.5)});\r\n    let classes6 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.6)});\r\n    let classes7 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.7)});\r\n    let classes8 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.8)});\r\n    let classes9 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.9)});\r\n    let classes10 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 1)});\r\n\r\n    const select = [ classes0, classes1, classes2, classes3, classes4, classes5, classes6, classes7, classes8, classes9, classes10 ]\r\n    const [weight, setWeight] = useState();\r\n\r\n    const [value, ] = useState(new Date());\r\n    const [apiData, setApiData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [flag, setFlag] = useState(false);\r\n    const [projectId,] =useState(location.projectId);\r\n    const [projectTitle,] =useState(location.projectTitle);\r\n\r\n    const [shareLink,] = useState('http://localhost:3000/share/'+getUUID());\r\n\r\n    useEffect(async () =>{\r\n        if(flag) setFlag(false);\r\n        setIsLoading(false);\r\n        await fetchApi().then(res => setApiData(res)).then(setIsLoading(true));\r\n    },[]);\r\n    useEffect(()=>{\r\n        if(isLoading) setFlag(true);\r\n    },[isLoading]);\r\n\r\n    function parse(str) {\r\n        var y = str.substr(0,4);\r\n        var m = str.substr(4,2);\r\n        var d = str.substr(6,2); \r\n        return  new Date(y,m-1,d);\r\n    };\r\n    \r\n\r\n    function jointpars(apiData){\r\n        var voteData = JSON.parse(apiData.votedata);\r\n\r\n        var totaljoint = [];\r\n        for(var j=0; j<voteData.length;j++){\r\n            var joint = [];\r\n            for( var i= 0;i<voteData[j].length;i++){\r\n                joint = [\r\n                    ...joint,\r\n                    {\r\n                        votedata:voteData[j][i].date\r\n                    }\r\n                ]\r\n            }\r\n            totaljoint=[\r\n                ...totaljoint,\r\n                {\r\n                    votedata:joint\r\n                }\r\n            ]\r\n        }\r\n        console.log(totaljoint);\r\n        return totaljoint;\r\n    }\r\n\r\n    async function fetchApi(){\r\n        return axios.post('http://localhost:5000/v1/get/project-result', {projectId:projectId}).then(function (res) {\r\n            console.log(res);\r\n            setWeight((select.length/res.data.count));\r\n            return jointpars(res.data);\r\n        });\r\n    }\r\n    async function fetchApi2(){\r\n        var url = 'http://localhost:5000/v1/save/shareLink';\r\n        return axios.post(url, {projectId:location.projectId, shareLink:shareLink}).then(function (res) {\r\n            return res.data;\r\n        })\r\n    }\r\n\r\n\r\n    function tileClassName(params){\r\n        if(!(apiData.length===0)){\r\n            var count = 0;\r\n            apiData.map(i=>{ count += comparFerUser(params,i) ? 1 : 0; });\r\n            return assignColor(count);\r\n        }\r\n    }\r\n\r\n    function assignColor(count){\r\n        count = weight*count > select.length-1 ? select.length-1 : weight*count;\r\n        try { return `${select[Math.round(count)].foo}`;\r\n        } catch (error) { console.log(weight,Math.round(count),'err'); }\r\n    }\r\n\r\n    function comparFerUser(params,idx){\r\n        if(params.view === 'month' && idx)\r\n            if(idx.votedata.some(x => parse(x.votedata.replaceAll('-','')).valueOf() === params.date.valueOf()))\r\n                return true;\r\n    }\r\n\r\n\r\n    const userName = localStorage.getItem(\"userName\");\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    const userImage = localStorage.getItem(\"userImage\");\r\n\r\n    return (\r\n        <div>\r\n        <BoxDescription icon={icon_plan} title={projectTitle}/>\r\n        \r\n\r\n        <div className='alignCenter'>\r\n            <div className='logoText'>우리 모두 일정 맞추기</div>\r\n            <img className='Applogo' src={yonal_logo}/>\r\n\r\n            <h3 className='calendarGuide'>종합된 날짜</h3>\r\n            <div>\r\n            {isLoading ?\r\n            <Calendar className=\"calendar\"\r\n                value = {value}\r\n                minDate = {value}\r\n                tileClassName = {flag?tileClassName:\"\" } \r\n            />\r\n            : \"Loading\"\r\n            }\r\n            </div>\r\n            <Link to={{pathname: './copylink', value: shareLink}}>\r\n                <button className = 'btn' onClick={fetchApi2} disabled={false}>결과 공유하기</button>\r\n            </Link>\r\n        </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ResultForManager;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\GoogleButton.js",["107"],"import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport GoogleLogin from 'react-google-login';\r\nimport axios from 'axios';\r\n\r\nconst clientId = \"88721696570-626294ccdp8h1vthmb7sce60mep2i15q.apps.googleusercontent.com\";\r\n// 클라이언트 보안 비밀번호 Z4L3SvyZM_xL7YyhLN4sufuB\r\n\r\nconst GoogleButton = ({sendData , history}) => {\r\n\r\n    const onSuccess = async(response) => {\r\n\r\n        await axios.post('http://localhost:5000/v1/register/google-login', {\r\n            user_name:response.getBasicProfile().getName(),\r\n            user_email:response.getBasicProfile().getEmail(),\r\n            user_image:response.getBasicProfile().getImageUrl()\r\n        });\r\n\r\n        let userName = response.getBasicProfile().getName();\r\n        let userEmail = response.getBasicProfile().getEmail();\r\n        let userImage = response.getBasicProfile().getImageUrl();\r\n\r\n        localStorage.setItem(\"userName\", userName);\r\n        localStorage.setItem(\"userEmail\", userEmail);\r\n        localStorage.setItem(\"userImage\", userImage);\r\n\r\n        sendData(userName, userEmail, userImage , true);\r\n        console.log(response);\r\n        history.push({pathname: \"../loginhome\", name:userName, email:userEmail, image:userImage});\r\n    }\r\n\r\n    const onFailure = (error) => {\r\n        console.log(error);\r\n        sendData(null, null, null, false);\r\n        history.push({pathname: \"./homepage\"});\r\n    }\r\n\r\n    return(\r\n        <div className='googleBtn'>\r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                responseType={\"id_token\"}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(GoogleButton);","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\ResultForGuest.js",["108","109","110"],"import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport '../calendar.css';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n/*  참여한 모든 유저의 date데이터를 api로 불러온다.\r\n    이렇게 불러온 데이터를 종합하여 캘린더에 출력한다. */\r\n\r\n// projectId는 링크를 통해 유추한다.\r\n\r\nlet useStyles = makeStyles({ foo: props => ({backgroundColor: props.backgroundColor, }),}); \r\nconst rgbHex = require('rgb-hex');\r\n\r\nconst ResultForGuest = () => {\r\n    let classes0 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0)});\r\n    let classes1 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.1)});\r\n    let classes2 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.2)});\r\n    let classes3 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.3)});\r\n    let classes4 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.4)});\r\n    let classes5 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.5)});\r\n    let classes6 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.6)});\r\n    let classes7 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.7)});\r\n    let classes8 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.8)});\r\n    let classes9 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 0.9)});\r\n    let classes10 = useStyles({ backgroundColor: '#'+rgbHex(40,75,114, 1)});\r\n\r\n    const select = [ classes0, classes1, classes2, classes3, classes4, classes5, classes6, classes7, classes8, classes9, classes10 ]\r\n    const [weight, setWeight] = useState();\r\n\r\n    const [value, ] = useState(new Date());\r\n    const [apiData, setApiData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [flag, setFlag] = useState(false);\r\n\r\n    useEffect(async () =>{\r\n        if(flag) setFlag(false);\r\n        setIsLoading(false);\r\n        await fetchApi().then(res => setApiData(res)).then(setIsLoading(true));\r\n    },[]);\r\n    useEffect(()=>{\r\n        if(isLoading) setFlag(true);\r\n    },[isLoading]);\r\n\r\n    function parse(str) {\r\n        var y = str.substr(0,4);\r\n        var m = str.substr(4,2);\r\n        var d = str.substr(6,2); \r\n        return  new Date(y,m-1,d);\r\n    };\r\n    \r\n    function jointpars(apiData){\r\n        var voteData = JSON.parse(apiData.votedata);\r\n\r\n        var totaljoint = [];\r\n        for(var j=0; j<voteData.length;j++){\r\n            var joint = [];\r\n            for( var i= 0;i<voteData[j].length;i++){\r\n                joint = [\r\n                    ...joint,\r\n                    {\r\n                        votedata:voteData[j][i].date\r\n                    }\r\n                ]\r\n            }\r\n            totaljoint=[\r\n                ...totaljoint,\r\n                {\r\n                    votedata:joint\r\n                }\r\n            ]\r\n        }\r\n\r\n        return totaljoint;\r\n    }\r\n    \r\n    async function fetchApi(){\r\n        return axios.post('http://localhost:5000/v1/get/project-result-from-link', {shareLink:document.location.href}).then(function (res) {\r\n            setWeight((select.length/res.data.count));\r\n            return jointpars(res.data);\r\n        });\r\n    }    \r\n    \r\n    function tileClassName(params){\r\n        if(!(apiData.length===0)){\r\n            var count = 0;\r\n            apiData.map(i=>{ count += comparFerUser(params,i) ? 1 : 0; });\r\n            return assignColor(count);\r\n        }\r\n    }\r\n\r\n    function assignColor(count){\r\n        count = weight*count > select.length-1 ? select.length-1 : weight*count;\r\n        try { return `${select[Math.round(count)].foo}`;\r\n        } catch (error) { console.log(weight,Math.round(count),'err'); }\r\n    }\r\n\r\n    function comparFerUser(params,idx){\r\n        if(params.view === 'month' && idx)\r\n            if(idx.votedata.some(x => parse(x.votedata.replaceAll('-','')).valueOf() === params.date.valueOf()))\r\n                return true;\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <h1>종합된 날짜</h1>\r\n            <div>\r\n            {isLoading ?\r\n            <Calendar className=\"calendar\"\r\n                value = {value}\r\n                minDate = {value}\r\n                tileClassName = {flag?tileClassName:\"\" } \r\n            />\r\n            : \"Loading\"\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ResultForGuest;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\Guest.js",["111","112"],"import React, { useState, useEffect } from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport BoxDescription from '../../component/BoxDescription'\r\nimport icon_plan from '../../image/yonal_icon_plan.png'\r\nimport axios from 'axios';\r\n\r\nfunction saveData(projectId, nickname) {\r\n    axios.post('http://localhost:5000/v1/link/new-user', {\r\n        project_id:projectId,\r\n        user_nickname:nickname\r\n    });\r\n\r\n}\r\n\r\nconst Guest = ({location, history}) => {\r\n    const [nickname, setNickname] = useState('');\r\n    const projectTitle = location.projectTitle;\r\n\r\n    const isMobile = useMediaQuery ({\r\n        query : \"(max-width : 500px)\"\r\n    })\r\n    const nicknameGuide = isMobile? 'mNicknameGuide' : 'nicknameGuide';\r\n\r\n\r\n    const onClick = () => {\r\n        if(nickname == ''){\r\n            alert(\"닉네임을 입력해주세요.\");\r\n        }else{\r\n            saveData(location.projectId, nickname);\r\n            history.push({\r\n                pathname: \"/calendar\", \r\n                nickname:nickname, \r\n                projectId: location.projectId, \r\n                projectTitle:projectTitle, \r\n                startDate:location.startDate, \r\n                endDate:location.endDate\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <BoxDescription icon={icon_plan} title={location.projectTitle}/>\r\n\r\n            <h3 className={nicknameGuide}>별명을 입력해주세요.</h3>\r\n            <form>\r\n            <label>\r\n                <input className= \"inputField\" type=\"text\" value={nickname} onChange={(e) => setNickname(e.target.value)} placeholder = \"별명\" />\r\n            </label>\r\n            <input type=\"button\" value=\"투표하러 가기\" className=\"btn\" onClick={onClick}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Guest);","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\CalendarComponent.js",["113","114","115","116"],"import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport BoxDescription from '../../component/BoxDescription'\r\nimport yonal_logo from '../../image/yonal_logo.png'\r\nimport icon_plan from '../../image/yonal_icon_plan.png'\r\n\r\n\r\nimport '../calendar.css';\r\nimport axios from 'axios';\r\n\r\n/*  사용자가 참여 가능한 날짜를 선택할 수 있는 달력 컴포넌트\r\n    사용자가 날짜를 선택하면 해당 날짜가 days에 date형식으로 저장된다.\r\n    이어서 버튼을 누르면, days에 저장된 데이터가 db로 업로드된다. */\r\n\r\n// nickname은 props를 통해 전달되어야 한다.\r\n// projectId는 링크를 통해 유추한다.\r\n\r\nconst CalendarComponent = ({location, history}) => {\r\n    const projectId = location.projectId;\r\n    const nickname = location.nickname;\r\n    const projectTitle = location.projectTitle;\r\n    const startDate = location.startDate;\r\n    const endDate = location.endDate;\r\n\r\n    const [days, setDays] = useState([]);\r\n    const [value, ] = useState(new Date());\r\n\r\n    function check_selected_days(nextValue){\r\n        var flag = -1;\r\n        if(nextValue.valueOf() === value.valueOf()) return;\r\n        for(var day in days){\r\n            if(days[day].valueOf() === nextValue.valueOf()){\r\n                flag = day;\r\n                break;\r\n            }\r\n        }\r\n        if(flag===-1){\r\n            setDays(days.concat(nextValue));\r\n        }else{\r\n            var fore = days.splice(0, flag);\r\n            var back = days.splice(1, days.length);\r\n            var tmp = fore.concat(back);\r\n            setDays(tmp);\r\n        }\r\n    }\r\n    \r\n    const fetchApi = async() =>{\r\n        const res = await axios.post('http://localhost:5000/v1/save/project-userId-date',{\r\n            projectId : projectId,// for test\r\n            userId :2,// for test\r\n            date:days\r\n        });\r\n        history.push({pathname: \"/voteFinished\", nickname:nickname, projectTitle:projectTitle});\r\n\r\n    }\r\n\r\n    function tileClassName(params){\r\n        if(params.view === 'month' && !(days.length ===0))\r\n            if(days.some(x => x.valueOf() === params.date.valueOf()))\r\n                return 'selected_day'\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <BoxDescription icon={icon_plan} title={location.projectTitle}/>\r\n\r\n            <div className='logoText'>우리 모두 일정 맞추기</div>\r\n            <img className='Applogo' src={yonal_logo}/>\r\n\r\n            <h3 className='calendarGuide'>가능한 날짜를 선택해 주세요.</h3>\r\n            <Calendar\r\n                className=\"calendar\"\r\n                onChange={check_selected_days} \r\n                value={value}\r\n                minDate={value}\r\n                tileClassName={tileClassName}\r\n            />\r\n            <Link to='/totalcal'>\r\n            <button className = 'btn' onClick={fetchApi}>제출하기</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarComponent;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\InvitedHome.js",["117"],"import React, { useState } from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {useMediaQuery} from 'react-responsive'\r\nimport BoxDescription from '../../component/BoxDescription'\r\nimport yonal_logo from '../../image/yonal_logo.png'\r\nimport icon_plan from '../../image/yonal_icon_plan.png'\r\nimport icon_people from '../../image/yonal_icon_people.png'\r\nimport icon_calendar from '../../image/yonal_icon_calendar.png'\r\nimport axios from 'axios';\r\n\r\n\r\nconst InvitedHome = ({location, history}) => {\r\n    const inviteLink = document.location.href;\r\n    console.log(\"링크:\", inviteLink);\r\n\r\n    const [projectId, setProjectId] = useState('');\r\n    const [projectTitle, setProjectTitle] = useState('');\r\n    const [memberNum, setMemberNum] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [projectDate, setProjectDate] = useState('');\r\n    const isMobile = useMediaQuery ({\r\n        query : \"(max-width : 500px)\"\r\n    })\r\n    const grayBackground = isMobile? 'mGrayBackground' : 'grayBackground';\r\n        \r\n    axios.post('http://localhost:5000/v1/get/link-data', {\r\n        inviteLink: inviteLink\r\n    }).then(function(res){\r\n        setProjectId(res.data.projectId);\r\n        setProjectTitle(res.data.projectName);\r\n        setMemberNum(res.data.number);\r\n        setStartDate(res.data.startDate);\r\n        setEndDate(res.data.endDate);\r\n        setProjectDate(res.data.startDate+' - '+res.data.endDate);\r\n    });\r\n\r\n\r\n    \r\n    return (\r\n        <div className='App'>\r\n            \r\n            userImage\r\n            <div className={grayBackground}>\r\n                <BoxDescription icon={icon_plan} title=\"프로젝트 이름\" content={projectTitle}/>\r\n                <BoxDescription icon={icon_people} title=\"현재 참여 인원\" content={`${memberNum} 명`}/>\r\n                <BoxDescription icon={icon_calendar} title=\"매칭 일정\" content={projectDate}/>\r\n            </div>\r\n\r\n            <div >\r\n                {/* <Link to={{pathname: '/guest', projectId: projectId, projectTitle: projectTitle}}>\r\n                    <button className = 'btn'>입장하기</button>\r\n                </Link> */}\r\n\r\n                <button className = 'btn' onClick={() => { \r\n                    history.push({pathname: \"/guest\", projectId: projectId, projectTitle: projectTitle, startDate:startDate, endDate:endDate});\r\n                }}>입장하기</button>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(InvitedHome);","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\BtnCalendar.js",[],["118","119"],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\component\\BoxDescription.js",["120"],"import React, {} from 'react';\r\n\r\nconst BoxDescription = (props) => {\r\n    return(\r\n        <div className='descriptionLine'>\r\n            <img className='descriptionIcon' src={props.icon}/>\r\n            <div className = \"descriptionTitle\">{props.title}</div>\r\n            <div className = \"descriptionContent\">{props.content}</div>\r\n    </div>   \r\n    );\r\n}\r\n\r\nexport default BoxDescription;","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LinkPages\\VoteFinished.js",[],"C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePage2.js",["121","122","123","124","125","126","127","128","129"],"import React, {useState} from 'react';\r\nimport {BrowserRouter, Route, Link, withRouter} from 'react-router-dom'\r\nimport yonal_logo from '../image/yonal_logo.png'\r\nimport GoogleButton from '../component/GoogleButton'\r\nimport {useMediaQuery} from 'react-responsive'\r\n\r\nconst HomePage2 = ({history}) => {\r\n  const [isLogin, setIsLogin] = useState(null);\r\n  const [userName, setUserName] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  const [userImage, setUserImage] = useState(null);\r\n\r\n  const sendData = (name, email, image, isLogin) => {\r\n    setIsLogin(isLogin);\r\n    setUserName(name);\r\n    setUserEmail(email);\r\n    setUserImage(image);\r\n  };\r\n\r\n  const Logout = () => {\r\n    setIsLogin(false);\r\n    setUserName(null);\r\n    setUserEmail(null);\r\n    setUserImage(null);\r\n  };\r\n\r\n  const isMobile = useMediaQuery ({\r\n    query : \"(max-width : 500px)\"\r\n  })\r\n\r\n  const nicknameGuide = isMobile? 'mNicknameGuide' : 'nicknameGuide';\r\n\r\n  if(localStorage.getItem(\"userName\")){\r\n    history.push({\r\n      pathname: \"/loginhome\", \r\n  });\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n  <div>\r\n      <div className='logoText'>우리 모두 일정 맞추기</div>\r\n      <Link to={{pathname: '../'}}>\r\n        <img className='Applogo' src={yonal_logo}/>  \r\n      </Link>\r\n      <GoogleButton className = 'googleBtn' sendData={(e) => sendData}/>\r\n      <div className='loginGuide'>요날을 이용하시려면 로그인을 해주세요.</div>\r\n      \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(HomePage2);","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\LoginHome.js",["130","131","132","133","134","135","136","137","138"],"import React, {useEffect, useState} from 'react';\r\nimport {BrowserRouter, Route, Link, withRouter} from 'react-router-dom'\r\nimport yonal_logo from '../image/yonal_logo.png'\r\nimport LoginUserMain from './HomePages/LoginUserMain'\r\nimport {useMediaQuery} from 'react-responsive'\r\n\r\nconst LoginHome = ({location, history}) => {\r\n  const [isLogin, setIsLogin] = useState(null);\r\n  const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || null);\r\n  const [userEmail, setUserEmail] = useState(localStorage.getItem(\"userEmail\") || null);\r\n  const [userImage, setUserImage] = useState(localStorage.getItem(\"userImage\") || null);\r\n  const isMobile = useMediaQuery ({\r\n    query : \"(max-width : 500px)\"\r\n  })\r\n  const projectStyle = isMobile? 'mNicknameGuide' : 'nicknameGuide';\r\n\r\n\r\n  useEffect(() => {\r\n\r\n  })\r\n  \r\n  const Logout = () => {\r\n    localStorage.clear();\r\n  };\r\n\r\n\r\n  return (\r\n      <div>\r\n        <div className='alignRight'>\r\n          <Link to='./loginpage'> \r\n            <button className = 'logoutBtn' onClick={Logout}>로그아웃</button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='alignCenter'>\r\n          <div className='logoText'>우리 모두 일정 맞추기</div>\r\n          <Link to={{pathname: './home', name:userName, email:userEmail, image:userImage}}>\r\n            <img className='Applogo' src={yonal_logo}/>\r\n          </Link>\r\n          <LoginUserMain name={userName} email={userEmail} image={userImage}/>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginHome);","C:\\Users\\ksh04\\Projects\\ReactProject\\yonal-front-react\\client\\src\\screen\\HomePages\\LoginUserMain.js",["139","140","141","142"],{"ruleId":"143","severity":1,"message":"144","line":8,"column":10,"nodeType":"145","messageId":"146","endLine":8,"endColumn":20},{"ruleId":"143","severity":1,"message":"147","line":12,"column":7,"nodeType":"145","messageId":"146","endLine":12,"endColumn":11},{"ruleId":"143","severity":1,"message":"148","line":17,"column":7,"nodeType":"145","messageId":"146","endLine":17,"endColumn":14},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"143","severity":1,"message":"153","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":21},{"ruleId":"154","severity":1,"message":"155","line":38,"column":15,"nodeType":"156","endLine":44,"endColumn":6},{"ruleId":"154","severity":1,"message":"157","line":44,"column":7,"nodeType":"158","endLine":44,"endColumn":9,"suggestions":"159"},{"ruleId":"143","severity":1,"message":"160","line":47,"column":15,"nodeType":"145","messageId":"146","endLine":47,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":78,"column":49,"nodeType":"163","messageId":"164","endLine":78,"endColumn":51},{"ruleId":"165","severity":1,"message":"166","line":78,"column":65,"nodeType":"163","messageId":"167","endLine":78,"endColumn":66},{"ruleId":"165","severity":1,"message":"166","line":78,"column":69,"nodeType":"163","messageId":"167","endLine":78,"endColumn":70},{"ruleId":"168","severity":1,"message":"169","line":86,"column":13,"nodeType":"170","endLine":86,"endColumn":56},{"ruleId":"161","severity":1,"message":"162","line":23,"column":45,"nodeType":"163","messageId":"164","endLine":23,"endColumn":47},{"ruleId":"165","severity":1,"message":"166","line":23,"column":61,"nodeType":"163","messageId":"167","endLine":23,"endColumn":62},{"ruleId":"165","severity":1,"message":"166","line":23,"column":65,"nodeType":"163","messageId":"167","endLine":23,"endColumn":66},{"ruleId":"154","severity":1,"message":"155","line":53,"column":15,"nodeType":"156","endLine":57,"endColumn":6},{"ruleId":"154","severity":1,"message":"171","line":57,"column":7,"nodeType":"158","endLine":57,"endColumn":9,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":113,"column":26,"nodeType":"156","messageId":"175","endLine":113,"endColumn":28},{"ruleId":"143","severity":1,"message":"176","line":131,"column":11,"nodeType":"145","messageId":"146","endLine":131,"endColumn":19},{"ruleId":"143","severity":1,"message":"177","line":132,"column":11,"nodeType":"145","messageId":"146","endLine":132,"endColumn":20},{"ruleId":"143","severity":1,"message":"178","line":133,"column":11,"nodeType":"145","messageId":"146","endLine":133,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":142,"column":13,"nodeType":"170","endLine":142,"endColumn":56},{"ruleId":"143","severity":1,"message":"179","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":24},{"ruleId":"154","severity":1,"message":"155","line":37,"column":15,"nodeType":"156","endLine":41,"endColumn":6},{"ruleId":"154","severity":1,"message":"171","line":41,"column":7,"nodeType":"158","endLine":41,"endColumn":9,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"174","line":88,"column":26,"nodeType":"156","messageId":"175","endLine":88,"endColumn":28},{"ruleId":"143","severity":1,"message":"181","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"162","line":27,"column":21,"nodeType":"163","messageId":"164","endLine":27,"endColumn":23},{"ruleId":"143","severity":1,"message":"182","line":24,"column":11,"nodeType":"145","messageId":"146","endLine":24,"endColumn":20},{"ruleId":"143","severity":1,"message":"183","line":25,"column":11,"nodeType":"145","messageId":"146","endLine":25,"endColumn":18},{"ruleId":"143","severity":1,"message":"160","line":50,"column":15,"nodeType":"145","messageId":"146","endLine":50,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":70,"column":13,"nodeType":"170","endLine":70,"endColumn":56},{"ruleId":"143","severity":1,"message":"184","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":18},{"ruleId":"149","replacedBy":"185"},{"ruleId":"151","replacedBy":"186"},{"ruleId":"168","severity":1,"message":"169","line":6,"column":13,"nodeType":"170","endLine":6,"endColumn":64},{"ruleId":"143","severity":1,"message":"187","line":2,"column":9,"nodeType":"145","messageId":"146","endLine":2,"endColumn":22},{"ruleId":"143","severity":1,"message":"188","line":2,"column":24,"nodeType":"145","messageId":"146","endLine":2,"endColumn":29},{"ruleId":"143","severity":1,"message":"189","line":8,"column":10,"nodeType":"145","messageId":"146","endLine":8,"endColumn":17},{"ruleId":"143","severity":1,"message":"176","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":18},{"ruleId":"143","severity":1,"message":"177","line":10,"column":10,"nodeType":"145","messageId":"146","endLine":10,"endColumn":19},{"ruleId":"143","severity":1,"message":"178","line":11,"column":10,"nodeType":"145","messageId":"146","endLine":11,"endColumn":19},{"ruleId":"143","severity":1,"message":"190","line":20,"column":9,"nodeType":"145","messageId":"146","endLine":20,"endColumn":15},{"ruleId":"143","severity":1,"message":"191","line":31,"column":9,"nodeType":"145","messageId":"146","endLine":31,"endColumn":22},{"ruleId":"168","severity":1,"message":"169","line":44,"column":9,"nodeType":"170","endLine":44,"endColumn":52},{"ruleId":"143","severity":1,"message":"187","line":2,"column":9,"nodeType":"145","messageId":"146","endLine":2,"endColumn":22},{"ruleId":"143","severity":1,"message":"188","line":2,"column":24,"nodeType":"145","messageId":"146","endLine":2,"endColumn":29},{"ruleId":"143","severity":1,"message":"189","line":8,"column":10,"nodeType":"145","messageId":"146","endLine":8,"endColumn":17},{"ruleId":"143","severity":1,"message":"192","line":8,"column":19,"nodeType":"145","messageId":"146","endLine":8,"endColumn":29},{"ruleId":"143","severity":1,"message":"193","line":9,"column":20,"nodeType":"145","messageId":"146","endLine":9,"endColumn":31},{"ruleId":"143","severity":1,"message":"194","line":10,"column":21,"nodeType":"145","messageId":"146","endLine":10,"endColumn":33},{"ruleId":"143","severity":1,"message":"195","line":11,"column":21,"nodeType":"145","messageId":"146","endLine":11,"endColumn":33},{"ruleId":"143","severity":1,"message":"196","line":15,"column":9,"nodeType":"145","messageId":"146","endLine":15,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":38,"column":13,"nodeType":"170","endLine":38,"endColumn":56},{"ruleId":"143","severity":1,"message":"197","line":9,"column":11,"nodeType":"145","messageId":"146","endLine":9,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":41,"column":15,"nodeType":"156","endLine":43,"endColumn":6},{"ruleId":"154","severity":1,"message":"198","line":43,"column":7,"nodeType":"158","endLine":43,"endColumn":9,"suggestions":"199"},{"ruleId":"168","severity":1,"message":"169","line":53,"column":18,"nodeType":"170","endLine":53,"endColumn":56},"no-unused-vars","'formatName' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'element' is assigned a value but never used.","no-native-reassign",["200"],"no-negated-in-lhs",["201"],"'LoginUserMain' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'user_email'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'fetchApi' and 'flag'. Either include them or remove the dependency array.",["203"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'userName' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'userImage' is assigned a value but never used.","'useState' is defined but never used.",["204"],"'useEffect' is defined but never used.","'startDate' is assigned a value but never used.","'endDate' is assigned a value but never used.","'yonal_logo' is defined but never used.",["200"],["201"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'isLogin' is assigned a value but never used.","'Logout' is assigned a value but never used.","'nicknameGuide' is assigned a value but never used.","'setIsLogin' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'setUserEmail' is assigned a value but never used.","'setUserImage' is assigned a value but never used.","'projectStyle' is assigned a value but never used.","'myName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.",["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [user_email]",{"range":"213","text":"214"},"Update the dependencies array to be: [fetchApi, flag]",{"range":"215","text":"216"},{"range":"217","text":"216"},"Update the dependencies array to be: [fetchApi]",{"range":"218","text":"219"},[1456,1458],"[user_email]",[2653,2655],"[fetchApi, flag]",[1944,1946],[1275,1277],"[fetchApi]"]